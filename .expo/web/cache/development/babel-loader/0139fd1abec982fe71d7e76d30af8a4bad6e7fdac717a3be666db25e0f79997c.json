{"ast":null,"code":"import AnimatedNode from './AnimatedNode';\nimport deepEqual from 'lodash.isequal';\nfunction sanitizeTransform(inputTransform) {\n  const outputTransform = [];\n  let hasAnimatedTransform = false;\n  inputTransform.forEach(transform => {\n    for (const key in transform) {\n      const value = transform[key];\n      if (value instanceof AnimatedNode) {\n        hasAnimatedTransform = true;\n        outputTransform.push({\n          property: key,\n          nodeID: value.__nodeID\n        });\n      } else {\n        outputTransform.push({\n          property: key,\n          value\n        });\n      }\n    }\n  });\n  return hasAnimatedTransform ? outputTransform : undefined;\n}\nfunction extractAnimatedParentNodes(transform) {\n  const parents = [];\n  transform.forEach(transform => {\n    for (const key in transform) {\n      const value = transform[key];\n      if (value instanceof AnimatedNode) {\n        parents.push(value);\n      }\n    }\n  });\n  return parents;\n}\nexport function createOrReuseTransformNode(transform, oldNode) {\n  const config = sanitizeTransform(transform);\n  if (config === undefined) {\n    return undefined;\n  }\n  if (oldNode && deepEqual(config, oldNode._config)) {\n    return oldNode;\n  }\n  return new AnimatedTransform(transform, config);\n}\nclass AnimatedTransform extends AnimatedNode {\n  constructor(transform, config) {\n    super({\n      type: 'transform',\n      transform: config\n    }, extractAnimatedParentNodes(transform));\n    this._config = config;\n    this._transform = transform;\n  }\n  toString() {\n    return `AnimatedTransform, id: ${this.__nodeID}`;\n  }\n  __onEvaluate() {\n    return this._transform.map(transform => {\n      const result = {};\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getValue();\n        }\n      }\n      return result;\n    });\n  }\n}","map":{"version":3,"names":["AnimatedNode","deepEqual","sanitizeTransform","inputTransform","outputTransform","hasAnimatedTransform","forEach","transform","key","value","push","property","nodeID","__nodeID","undefined","extractAnimatedParentNodes","parents","createOrReuseTransformNode","oldNode","config","_config","AnimatedTransform","constructor","type","_transform","toString","__onEvaluate","map","result","__getValue"],"sources":["C:/Users/jsh4f/OneDrive/Documents/GitHub/UDL/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedTransform.js"],"sourcesContent":["import AnimatedNode from './AnimatedNode';\n\nimport deepEqual from 'lodash.isequal';\n\nfunction sanitizeTransform(inputTransform) {\n  const outputTransform = [];\n  let hasAnimatedTransform = false;\n  inputTransform.forEach((transform) => {\n    for (const key in transform) {\n      const value = transform[key];\n      if (value instanceof AnimatedNode) {\n        hasAnimatedTransform = true;\n        outputTransform.push({\n          property: key,\n          nodeID: value.__nodeID,\n        });\n      } else {\n        outputTransform.push({\n          property: key,\n          value,\n        });\n      }\n    }\n  });\n  return hasAnimatedTransform ? outputTransform : undefined;\n}\n\nfunction extractAnimatedParentNodes(transform) {\n  const parents = [];\n  transform.forEach((transform) => {\n    for (const key in transform) {\n      const value = transform[key];\n      if (value instanceof AnimatedNode) {\n        parents.push(value);\n      }\n    }\n  });\n  return parents;\n}\n\nexport function createOrReuseTransformNode(transform, oldNode) {\n  const config = sanitizeTransform(transform);\n  if (config === undefined) {\n    return undefined;\n  }\n  if (oldNode && deepEqual(config, oldNode._config)) {\n    return oldNode;\n  }\n  return new AnimatedTransform(transform, config);\n}\n\nclass AnimatedTransform extends AnimatedNode {\n  constructor(transform, config) {\n    super(\n      { type: 'transform', transform: config },\n      extractAnimatedParentNodes(transform)\n    );\n    this._config = config;\n    this._transform = transform;\n  }\n\n  toString() {\n    return `AnimatedTransform, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    return this._transform.map((transform) => {\n      const result = {};\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getValue();\n        }\n      }\n      return result;\n    });\n  }\n}\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,gBAAgB;AAEzC,OAAOC,SAAS,MAAM,gBAAgB;AAEtC,SAASC,iBAAiBA,CAACC,cAAc,EAAE;EACzC,MAAMC,eAAe,GAAG,EAAE;EAC1B,IAAIC,oBAAoB,GAAG,KAAK;EAChCF,cAAc,CAACG,OAAO,CAAEC,SAAS,IAAK;IACpC,KAAK,MAAMC,GAAG,IAAID,SAAS,EAAE;MAC3B,MAAME,KAAK,GAAGF,SAAS,CAACC,GAAG,CAAC;MAC5B,IAAIC,KAAK,YAAYT,YAAY,EAAE;QACjCK,oBAAoB,GAAG,IAAI;QAC3BD,eAAe,CAACM,IAAI,CAAC;UACnBC,QAAQ,EAAEH,GAAG;UACbI,MAAM,EAAEH,KAAK,CAACI;QAChB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLT,eAAe,CAACM,IAAI,CAAC;UACnBC,QAAQ,EAAEH,GAAG;UACbC;QACF,CAAC,CAAC;MACJ;IACF;EACF,CAAC,CAAC;EACF,OAAOJ,oBAAoB,GAAGD,eAAe,GAAGU,SAAS;AAC3D;AAEA,SAASC,0BAA0BA,CAACR,SAAS,EAAE;EAC7C,MAAMS,OAAO,GAAG,EAAE;EAClBT,SAAS,CAACD,OAAO,CAAEC,SAAS,IAAK;IAC/B,KAAK,MAAMC,GAAG,IAAID,SAAS,EAAE;MAC3B,MAAME,KAAK,GAAGF,SAAS,CAACC,GAAG,CAAC;MAC5B,IAAIC,KAAK,YAAYT,YAAY,EAAE;QACjCgB,OAAO,CAACN,IAAI,CAACD,KAAK,CAAC;MACrB;IACF;EACF,CAAC,CAAC;EACF,OAAOO,OAAO;AAChB;AAEA,OAAO,SAASC,0BAA0BA,CAACV,SAAS,EAAEW,OAAO,EAAE;EAC7D,MAAMC,MAAM,GAAGjB,iBAAiB,CAACK,SAAS,CAAC;EAC3C,IAAIY,MAAM,KAAKL,SAAS,EAAE;IACxB,OAAOA,SAAS;EAClB;EACA,IAAII,OAAO,IAAIjB,SAAS,CAACkB,MAAM,EAAED,OAAO,CAACE,OAAO,CAAC,EAAE;IACjD,OAAOF,OAAO;EAChB;EACA,OAAO,IAAIG,iBAAiB,CAACd,SAAS,EAAEY,MAAM,CAAC;AACjD;AAEA,MAAME,iBAAiB,SAASrB,YAAY,CAAC;EAC3CsB,WAAWA,CAACf,SAAS,EAAEY,MAAM,EAAE;IAC7B,KAAK,CACH;MAAEI,IAAI,EAAE,WAAW;MAAEhB,SAAS,EAAEY;IAAO,CAAC,EACxCJ,0BAA0B,CAACR,SAAS,CACtC,CAAC;IACD,IAAI,CAACa,OAAO,GAAGD,MAAM;IACrB,IAAI,CAACK,UAAU,GAAGjB,SAAS;EAC7B;EAEAkB,QAAQA,CAAA,EAAG;IACT,OAAO,0BAA0B,IAAI,CAACZ,QAAQ,EAAE;EAClD;EAEAa,YAAYA,CAAA,EAAG;IACb,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAEpB,SAAS,IAAK;MACxC,MAAMqB,MAAM,GAAG,CAAC,CAAC;MACjB,KAAK,MAAMpB,GAAG,IAAID,SAAS,EAAE;QAC3B,MAAME,KAAK,GAAGF,SAAS,CAACC,GAAG,CAAC;QAC5B,IAAIC,KAAK,YAAYT,YAAY,EAAE;UACjC4B,MAAM,CAACpB,GAAG,CAAC,GAAGC,KAAK,CAACoB,UAAU,CAAC,CAAC;QAClC;MACF;MACA,OAAOD,MAAM;IACf,CAAC,CAAC;EACJ;AACF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}