{"ast":null,"code":"import { defineAnimation } from './util';\nexport const withSequence = function () {\n  const _f = function (..._animations) {\n    return defineAnimation(_animations[0], function () {\n      const _f = function () {\n        const animations = _animations.map(a => {\n          const result = typeof a === 'function' ? a() : a;\n          result.finished = false;\n          return result;\n        });\n        const firstAnimation = animations[0];\n        const callback = finished => {\n          if (finished) {\n            return;\n          }\n          animations.forEach(animation => {\n            if (typeof animation.callback === 'function' && !animation.finished) {\n              animation.callback(finished);\n            }\n          });\n        };\n        function sequence(animation, now) {\n          const currentAnim = animations[animation.animationIndex];\n          const finished = currentAnim.onFrame(currentAnim, now);\n          animation.current = currentAnim.current;\n          if (finished) {\n            if (currentAnim.callback) {\n              currentAnim.callback(true);\n            }\n            currentAnim.finished = true;\n            animation.animationIndex += 1;\n            if (animation.animationIndex < animations.length) {\n              const nextAnim = animations[animation.animationIndex];\n              nextAnim.onStart(nextAnim, currentAnim.current, now, currentAnim);\n              return false;\n            }\n            return true;\n          }\n          return false;\n        }\n        function onStart(animation, value, now, previousAnimation) {\n          animation.animationIndex = 0;\n          if (previousAnimation === undefined) {\n            previousAnimation = animations[animations.length - 1];\n          }\n          firstAnimation.onStart(firstAnimation, value, now, previousAnimation);\n        }\n        return {\n          isHigherOrder: true,\n          onFrame: sequence,\n          onStart,\n          animationIndex: 0,\n          current: firstAnimation.current,\n          callback\n        };\n      };\n      _f._closure = {\n        _animations\n      };\n      _f.asString = \"function _f(){const{_animations}=jsThis._closure;{const animations=_animations.map(function(a){const result=typeof a==='function'?a():a;result.finished=false;return result;});const firstAnimation=animations[0];const callback=function(finished){if(finished){return;}animations.forEach(function(animation){if(typeof animation.callback==='function'&&!animation.finished){animation.callback(finished);}});};function sequence(animation,now){const currentAnim=animations[animation.animationIndex];const finished=currentAnim.onFrame(currentAnim,now);animation.current=currentAnim.current;if(finished){if(currentAnim.callback){currentAnim.callback(true);}currentAnim.finished=true;animation.animationIndex+=1;if(animation.animationIndex<animations.length){const nextAnim=animations[animation.animationIndex];nextAnim.onStart(nextAnim,currentAnim.current,now,currentAnim);return false;}return true;}return false;}function onStart(animation,value,now,previousAnimation){animation.animationIndex=0;if(previousAnimation===undefined){previousAnimation=animations[animations.length-1];}firstAnimation.onStart(firstAnimation,value,now,previousAnimation);}return{isHigherOrder:true,onFrame:sequence,onStart:onStart,animationIndex:0,current:firstAnimation.current,callback:callback};}}\";\n      _f.__workletHash = 15836040379667;\n      _f.__location = \"C:\\\\Users\\\\jsh4f\\\\OneDrive\\\\Documents\\\\GitHub\\\\UDL\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\animation\\\\sequence.js (4:43)\";\n      return _f;\n    }());\n  };\n  _f._closure = {\n    defineAnimation\n  };\n  _f.asString = \"function withSequence(..._animations){const{defineAnimation}=jsThis._closure;{return defineAnimation(_animations[0],function(){'worklet';const animations=_animations.map(function(a){const result=typeof a==='function'?a():a;result.finished=false;return result;});const firstAnimation=animations[0];const callback=function(finished){if(finished){return;}animations.forEach(function(animation){if(typeof animation.callback==='function'&&!animation.finished){animation.callback(finished);}});};function sequence(animation,now){const currentAnim=animations[animation.animationIndex];const finished=currentAnim.onFrame(currentAnim,now);animation.current=currentAnim.current;if(finished){if(currentAnim.callback){currentAnim.callback(true);}currentAnim.finished=true;animation.animationIndex+=1;if(animation.animationIndex<animations.length){const nextAnim=animations[animation.animationIndex];nextAnim.onStart(nextAnim,currentAnim.current,now,currentAnim);return false;}return true;}return false;}function onStart(animation,value,now,previousAnimation){animation.animationIndex=0;if(previousAnimation===undefined){previousAnimation=animations[animations.length-1];}firstAnimation.onStart(firstAnimation,value,now,previousAnimation);}return{isHigherOrder:true,onFrame:sequence,onStart:onStart,animationIndex:0,current:firstAnimation.current,callback:callback};});}}\";\n  _f.__workletHash = 1167897017579;\n  _f.__location = \"C:\\\\Users\\\\jsh4f\\\\OneDrive\\\\Documents\\\\GitHub\\\\UDL\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\animation\\\\sequence.js (2:7)\";\n  return _f;\n}();\nexport const sequence = function () {\n  const _f = function (..._animations) {\n    console.warn('Method `sequence` is deprecated. Please use `withSequence` instead');\n    return withSequence(..._animations);\n  };\n  _f._closure = {\n    withSequence\n  };\n  _f.asString = \"function sequence(..._animations){const{withSequence}=jsThis._closure;{console.warn('Method `sequence` is deprecated. Please use `withSequence` instead');return withSequence(..._animations);}}\";\n  _f.__workletHash = 4967257710669;\n  _f.__location = \"C:\\\\Users\\\\jsh4f\\\\OneDrive\\\\Documents\\\\GitHub\\\\UDL\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\animation\\\\sequence.js (65:7)\";\n  return _f;\n}();","map":{"version":3,"names":["defineAnimation","withSequence","_f","_animations","animations","map","a","result","finished","firstAnimation","callback","forEach","animation","sequence","now","currentAnim","animationIndex","onFrame","current","length","nextAnim","onStart","value","previousAnimation","undefined","isHigherOrder","_closure","asString","__workletHash","__location","console","warn"],"sources":["C:/Users/jsh4f/OneDrive/Documents/GitHub/UDL/node_modules/react-native-reanimated/lib/reanimated2/animation/sequence.js"],"sourcesContent":["import { defineAnimation } from './util';\nexport function withSequence(..._animations) {\n    'worklet';\n    return defineAnimation(_animations[0], () => {\n        'worklet';\n        const animations = _animations.map((a) => {\n            const result = typeof a === 'function' ? a() : a;\n            result.finished = false;\n            return result;\n        });\n        const firstAnimation = animations[0];\n        const callback = (finished) => {\n            if (finished) {\n                // we want to call the callback after every single animation\n                // not after all of them\n                return;\n            }\n            // this is going to be called only if sequence has been cancelled\n            animations.forEach((animation) => {\n                if (typeof animation.callback === 'function' && !animation.finished) {\n                    animation.callback(finished);\n                }\n            });\n        };\n        function sequence(animation, now) {\n            const currentAnim = animations[animation.animationIndex];\n            const finished = currentAnim.onFrame(currentAnim, now);\n            animation.current = currentAnim.current;\n            if (finished) {\n                // we want to call the callback after every single animation\n                if (currentAnim.callback) {\n                    currentAnim.callback(true /* finished */);\n                }\n                currentAnim.finished = true;\n                animation.animationIndex += 1;\n                if (animation.animationIndex < animations.length) {\n                    const nextAnim = animations[animation.animationIndex];\n                    nextAnim.onStart(nextAnim, currentAnim.current, now, currentAnim);\n                    return false;\n                }\n                return true;\n            }\n            return false;\n        }\n        function onStart(animation, value, now, previousAnimation) {\n            animation.animationIndex = 0;\n            if (previousAnimation === undefined) {\n                previousAnimation = animations[animations.length - 1];\n            }\n            firstAnimation.onStart(firstAnimation, value, now, previousAnimation);\n        }\n        return {\n            isHigherOrder: true,\n            onFrame: sequence,\n            onStart,\n            animationIndex: 0,\n            current: firstAnimation.current,\n            callback,\n        };\n    });\n}\n/**\n * @deprecated Kept for backward compatibility. Will be removed soon.\n */\nexport function sequence(..._animations) {\n    'worklet';\n    console.warn('Method `sequence` is deprecated. Please use `withSequence` instead');\n    return withSequence(..._animations);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}