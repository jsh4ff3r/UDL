{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Calendar } from 'react-native-calendars';\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function BookingScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      weekly: false,\n      biweekly: false,\n      cleanup: false,\n      fertilization: false,\n      grassSeed: false\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    services = _useState2[0],\n    setServices = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedDate = _useState4[0],\n    setSelectedDate = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    address = _useState6[0],\n    setAddress = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    notes = _useState8[0],\n    setNotes = _useState8[1];\n  var toggleService = function toggleService(service) {\n    setServices(_objectSpread(_objectSpread({}, services), {}, _defineProperty({}, service, !services[service])));\n  };\n  var today = new Date();\n  var formattedToday = today.toISOString().split('T')[0];\n  var futureDate = new Date(today);\n  futureDate.setDate(futureDate.getDate() + 30);\n  var formattedMax = futureDate.toISOString().split('T')[0];\n  var serviceLabels = {\n    weekly: 'Weekly Services',\n    biweekly: 'Bi-weekly Services',\n    cleanup: 'Clean Ups',\n    fertilization: 'Fertilization',\n    grassSeed: 'Grass Seed'\n  };\n  return _jsx(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: Platform.OS === 'ios' ? 'padding' : undefined,\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.container,\n      keyboardShouldPersistTaps: \"handled\",\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Book Your Lawn Service\"\n      }), Object.keys(services).map(function (service) {\n        return _jsxs(View, {\n          style: styles.switchRow,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: serviceLabels[service]\n          }), _jsx(Switch, {\n            value: services[service],\n            onValueChange: function onValueChange() {\n              return toggleService(service);\n            }\n          })]\n        }, service);\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Select Date\"\n      }), _jsx(Calendar, {\n        onDayPress: function onDayPress(day) {\n          return setSelectedDate(day.dateString);\n        },\n        markedDates: _defineProperty({}, selectedDate, {\n          selected: true,\n          selectedColor: '#4CAF50'\n        }),\n        minDate: formattedToday,\n        maxDate: formattedMax,\n        hideArrows: false,\n        renderArrow: function renderArrow(direction) {\n          return _jsx(Text, {\n            style: styles.arrow,\n            children: direction === 'left' ? '<' : '>'\n          });\n        },\n        theme: {\n          arrowColor: '#4CAF50',\n          textMonthFontWeight: 'bold',\n          textMonthFontSize: 18\n        }\n      }), _jsx(View, {\n        style: styles.autocompleteWrapper,\n        children: _jsx(GooglePlacesAutocomplete, {\n          placeholder: \"Search Address\",\n          onPress: function onPress(data) {\n            var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            setAddress(data.description);\n          },\n          query: {\n            key: 'AIzaSyDLb4dNfk7SwA0YbOaa98unLC99_IjReXM',\n            language: 'en'\n          },\n          styles: {\n            textInput: styles.input,\n            container: {\n              flex: 0,\n              zIndex: 10\n            },\n            listView: {\n              zIndex: 20,\n              elevation: 5\n            }\n          },\n          fetchDetails: false\n        })\n      }), _jsx(TextInput, {\n        placeholder: \"Additional Notes\",\n        style: styles.input,\n        value: notes,\n        onChangeText: setNotes,\n        multiline: true,\n        numberOfLines: 4\n      }), _jsx(Button, {\n        title: \"Continue to Payment\",\n        onPress: function onPress() {\n          return navigation.navigate('Pay');\n        },\n        color: \"#4CAF50\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    backgroundColor: '#F5F5F5',\n    flexGrow: 1\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20,\n    fontWeight: 'bold',\n    color: '#4CAF50'\n  },\n  input: {\n    padding: 12,\n    borderColor: '#CCC',\n    borderWidth: 1,\n    borderRadius: 6,\n    marginBottom: 16,\n    backgroundColor: '#FFF'\n  },\n  switchRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 12\n  },\n  label: {\n    fontSize: 16,\n    marginBottom: 8\n  },\n  arrow: {\n    fontSize: 20,\n    color: '#4CAF50',\n    paddingHorizontal: 12\n  },\n  autocompleteWrapper: {\n    zIndex: 10,\n    marginBottom: 16\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","Button","StyleSheet","TextInput","ScrollView","Switch","KeyboardAvoidingView","Platform","Calendar","GooglePlacesAutocomplete","jsx","_jsx","jsxs","_jsxs","BookingScreen","_ref","navigation","_useState","weekly","biweekly","cleanup","fertilization","grassSeed","_useState2","_slicedToArray","services","setServices","_useState3","_useState4","selectedDate","setSelectedDate","_useState5","_useState6","address","setAddress","_useState7","_useState8","notes","setNotes","toggleService","service","_objectSpread","_defineProperty","today","Date","formattedToday","toISOString","split","futureDate","setDate","getDate","formattedMax","serviceLabels","style","flex","behavior","OS","undefined","children","contentContainerStyle","styles","container","keyboardShouldPersistTaps","title","Object","keys","map","switchRow","label","value","onValueChange","onDayPress","day","dateString","markedDates","selected","selectedColor","minDate","maxDate","hideArrows","renderArrow","direction","arrow","theme","arrowColor","textMonthFontWeight","textMonthFontSize","autocompleteWrapper","placeholder","onPress","data","details","arguments","length","description","query","key","language","textInput","input","zIndex","listView","elevation","fetchDetails","onChangeText","multiline","numberOfLines","navigate","color","create","padding","backgroundColor","flexGrow","fontSize","marginBottom","fontWeight","borderColor","borderWidth","borderRadius","flexDirection","justifyContent","alignItems","paddingHorizontal"],"sources":["C:/Users/jsh4f/Downloads/undefeated_landscaping_expo/screens/BookingScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  Button,\n  StyleSheet,\n  TextInput,\n  ScrollView,\n  Switch,\n  KeyboardAvoidingView,\n  Platform,\n} from 'react-native';\nimport { Calendar } from 'react-native-calendars';\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\n\nexport default function BookingScreen({ navigation }) {\n  const [services, setServices] = useState({\n    weekly: false,\n    biweekly: false,\n    cleanup: false,\n    fertilization: false,\n    grassSeed: false,\n  });\n\n  const [selectedDate, setSelectedDate] = useState('');\n  const [address, setAddress] = useState('');\n  const [notes, setNotes] = useState('');\n\n  const toggleService = (service) => {\n    setServices({ ...services, [service]: !services[service] });\n  };\n\n  const today = new Date();\n  const formattedToday = today.toISOString().split('T')[0];\n  const futureDate = new Date(today);\n  futureDate.setDate(futureDate.getDate() + 30);\n  const formattedMax = futureDate.toISOString().split('T')[0];\n\n  const serviceLabels = {\n    weekly: 'Weekly Services',\n    biweekly: 'Bi-weekly Services',\n    cleanup: 'Clean Ups',\n    fertilization: 'Fertilization',\n    grassSeed: 'Grass Seed',\n  };\n\n  return (\n    <KeyboardAvoidingView\n      style={{ flex: 1 }}\n      behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n    >\n      <ScrollView contentContainerStyle={styles.container} keyboardShouldPersistTaps=\"handled\">\n        <Text style={styles.title}>Book Your Lawn Service</Text>\n\n        {Object.keys(services).map((service) => (\n          <View key={service} style={styles.switchRow}>\n            <Text style={styles.label}>{serviceLabels[service]}</Text>\n            <Switch\n              value={services[service]}\n              onValueChange={() => toggleService(service)}\n            />\n          </View>\n        ))}\n\n        <Text style={styles.label}>Select Date</Text>\n        <Calendar\n          onDayPress={(day) => setSelectedDate(day.dateString)}\n          markedDates={{\n            [selectedDate]: {\n              selected: true,\n              selectedColor: '#4CAF50',\n            },\n          }}\n          minDate={formattedToday}\n          maxDate={formattedMax}\n          hideArrows={false}\n          renderArrow={(direction) => (\n            <Text style={styles.arrow}>{direction === 'left' ? '<' : '>'}</Text>\n          )}\n          theme={{\n            arrowColor: '#4CAF50',\n            textMonthFontWeight: 'bold',\n            textMonthFontSize: 18,\n          }}\n        />\n\n        <View style={styles.autocompleteWrapper}>\n          <GooglePlacesAutocomplete\n            placeholder=\"Search Address\"\n            onPress={(data, details = null) => {\n              setAddress(data.description);\n            }}\n            query={{\n              key: 'AIzaSyDLb4dNfk7SwA0YbOaa98unLC99_IjReXM',\n              language: 'en',\n            }}\n            styles={{\n              textInput: styles.input,\n              container: {\n                flex: 0,\n                zIndex: 10,\n              },\n              listView: {\n                zIndex: 20,\n                elevation: 5,\n              },\n            }}\n            fetchDetails={false}\n          />\n        </View>\n\n        <TextInput\n          placeholder=\"Additional Notes\"\n          style={styles.input}\n          value={notes}\n          onChangeText={setNotes}\n          multiline\n          numberOfLines={4}\n        />\n\n        <Button\n          title=\"Continue to Payment\"\n          onPress={() => navigation.navigate('Pay')}\n          color=\"#4CAF50\"\n        />\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    backgroundColor: '#F5F5F5',\n    flexGrow: 1,\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20,\n    fontWeight: 'bold',\n    color: '#4CAF50',\n  },\n  input: {\n    padding: 12,\n    borderColor: '#CCC',\n    borderWidth: 1,\n    borderRadius: 6,\n    marginBottom: 16,\n    backgroundColor: '#FFF',\n  },\n  switchRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  label: {\n    fontSize: 16,\n    marginBottom: 8,\n  },\n  arrow: {\n    fontSize: 20,\n    color: '#4CAF50',\n    paddingHorizontal: 12,\n  },\n  autocompleteWrapper: {\n    zIndex: 10,\n    marginBottom: 16,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}