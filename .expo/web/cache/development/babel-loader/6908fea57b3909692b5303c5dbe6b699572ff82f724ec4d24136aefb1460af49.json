{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _excluded = [\"key\", \"locationbias\", \"types\"],\n  _excluded2 = [\"onFocus\", \"onBlur\", \"onChangeText\", \"clearButtonMode\", \"InputComp\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport debounce from 'lodash.debounce';\nimport PropTypes from 'prop-types';\nimport Qs from 'qs';\nimport { v4 as uuidv4 } from 'uuid';\nimport React, { forwardRef, useMemo, useEffect, useImperativeHandle, useRef, useState, useCallback } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar defaultStyles = {\n  container: {\n    flex: 1\n  },\n  textInputContainer: {\n    flexDirection: 'row'\n  },\n  textInput: {\n    backgroundColor: '#FFFFFF',\n    height: 44,\n    borderRadius: 5,\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    fontSize: 15,\n    flex: 1,\n    marginBottom: 5\n  },\n  listView: {},\n  row: {\n    backgroundColor: '#FFFFFF',\n    padding: 13,\n    minHeight: 44,\n    flexDirection: 'row'\n  },\n  loader: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    height: 20\n  },\n  description: {},\n  separator: {\n    height: StyleSheet.hairlineWidth,\n    backgroundColor: '#c8c7cc'\n  },\n  poweredContainer: {\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n    borderColor: '#c8c7cc',\n    borderTopWidth: 0.5\n  },\n  powered: {}\n};\nexport var GooglePlacesAutocomplete = forwardRef(function (props, ref) {\n  var _results = [];\n  var _requests = [];\n  var hasNavigator = function hasNavigator() {\n    var _navigator;\n    if ((_navigator = navigator) != null && _navigator.geolocation) {\n      return true;\n    } else {\n      console.warn('If you are using React Native v0.60.0+ you must follow these instructions to enable currentLocation: https://git.io/Jf4AR');\n      return false;\n    }\n  };\n  var buildRowsFromResults = useCallback(function (results, text) {\n    var res = [];\n    var shouldDisplayPredefinedPlaces = text ? results.length === 0 && text.length === 0 : results.length === 0;\n    if (shouldDisplayPredefinedPlaces || props.predefinedPlacesAlwaysVisible === true) {\n      res = _toConsumableArray(props.predefinedPlaces.filter(function (place) {\n        return place == null ? void 0 : place.description.length;\n      }));\n      if (props.currentLocation === true && hasNavigator()) {\n        res.unshift({\n          description: props.currentLocationLabel,\n          isCurrentLocation: true\n        });\n      }\n    }\n    res = res.map(function (place) {\n      return _objectSpread(_objectSpread({}, place), {}, {\n        isPredefinedPlace: true\n      });\n    });\n    return [].concat(_toConsumableArray(res), _toConsumableArray(results));\n  }, [props.currentLocation, props.currentLocationLabel, props.predefinedPlaces, props.predefinedPlacesAlwaysVisible]);\n  var getRequestUrl = useCallback(function (requestUrl) {\n    if (requestUrl) {\n      if (requestUrl.useOnPlatform === 'all') {\n        return requestUrl.url;\n      }\n      if (requestUrl.useOnPlatform === 'web') {\n        return Platform.select({\n          web: requestUrl.url,\n          default: 'https://maps.googleapis.com/maps/api'\n        });\n      }\n    } else {\n      return 'https://maps.googleapis.com/maps/api';\n    }\n  }, []);\n  var getRequestHeaders = function getRequestHeaders(requestUrl) {\n    return (requestUrl == null ? void 0 : requestUrl.headers) || {};\n  };\n  var setRequestHeaders = function setRequestHeaders(request, headers) {\n    Object.keys(headers).map(function (headerKey) {\n      return request.setRequestHeader(headerKey, headers[headerKey]);\n    });\n  };\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    stateText = _useState2[0],\n    setStateText = _useState2[1];\n  var _useState3 = useState(buildRowsFromResults([])),\n    _useState4 = _slicedToArray(_useState3, 2),\n    dataSource = _useState4[0],\n    setDataSource = _useState4[1];\n  var _useState5 = useState(props.listViewDisplayed === 'auto' ? false : props.listViewDisplayed),\n    _useState6 = _slicedToArray(_useState5, 2),\n    listViewDisplayed = _useState6[0],\n    setListViewDisplayed = _useState6[1];\n  var _useState7 = useState(getRequestUrl(props.requestUrl)),\n    _useState8 = _slicedToArray(_useState7, 2),\n    url = _useState8[0],\n    setUrl = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    listLoaderDisplayed = _useState10[0],\n    setListLoaderDisplayed = _useState10[1];\n  var inputRef = useRef();\n  var _useState11 = useState(uuidv4()),\n    _useState12 = _slicedToArray(_useState11, 2),\n    sessionToken = _useState12[0],\n    setSessionToken = _useState12[1];\n  useEffect(function () {\n    setUrl(getRequestUrl(props.requestUrl));\n  }, [getRequestUrl, props.requestUrl]);\n  useEffect(function () {\n    _handleChangeText(stateText);\n    return function () {\n      _abortRequests();\n    };\n  }, [props.query]);\n  useEffect(function () {\n    setDataSource(buildRowsFromResults([]));\n  }, [buildRowsFromResults, props.predefinedPlaces]);\n  useImperativeHandle(ref, function () {\n    return {\n      setAddressText: function setAddressText(address) {\n        setStateText(address);\n      },\n      getAddressText: function getAddressText() {\n        return stateText;\n      },\n      blur: function blur() {\n        return inputRef.current.blur();\n      },\n      focus: function focus() {\n        return inputRef.current.focus();\n      },\n      isFocused: function isFocused() {\n        return inputRef.current.isFocused();\n      },\n      clear: function clear() {\n        return inputRef.current.clear();\n      },\n      getCurrentLocation: getCurrentLocation\n    };\n  });\n  var requestShouldUseWithCredentials = function requestShouldUseWithCredentials() {\n    return url === 'https://maps.googleapis.com/maps/api';\n  };\n  var _abortRequests = function _abortRequests() {\n    _requests.map(function (i) {\n      i.onreadystatechange = null;\n      i.abort();\n    });\n    _requests = [];\n  };\n  var supportedPlatform = function supportedPlatform() {\n    if (Platform.OS === 'web' && !props.requestUrl) {\n      console.warn('This library cannot be used for the web unless you specify the requestUrl prop. See https://git.io/JflFv for more for details.');\n      return false;\n    } else {\n      return true;\n    }\n  };\n  var getCurrentLocation = function getCurrentLocation() {\n    var options = {\n      enableHighAccuracy: false,\n      timeout: 20000,\n      maximumAge: 1000\n    };\n    if (props.enableHighAccuracyLocation && Platform.OS === 'android') {\n      options = {\n        enableHighAccuracy: true,\n        timeout: 20000\n      };\n    }\n    var getCurrentPosition = navigator.geolocation.getCurrentPosition || navigator.geolocation.default.getCurrentPosition;\n    getCurrentPosition && getCurrentPosition(function (position) {\n      if (props.nearbyPlacesAPI === 'None') {\n        var currentLocation = {\n          description: props.currentLocationLabel,\n          geometry: {\n            location: {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude\n            }\n          }\n        };\n        _disableRowLoaders();\n        props.onPress(currentLocation, currentLocation);\n      } else {\n        _requestNearby(position.coords.latitude, position.coords.longitude);\n      }\n    }, function (error) {\n      _disableRowLoaders();\n      console.error(error.message);\n    }, options);\n  };\n  var _onPress = function _onPress(rowData) {\n    if (rowData.isPredefinedPlace !== true && props.fetchDetails === true) {\n      if (rowData.isLoading === true) {\n        return;\n      }\n      Keyboard.dismiss();\n      _abortRequests();\n      _enableRowLoader(rowData);\n      var request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = function () {\n        if (request.readyState !== 4) return;\n        if (request.status === 200) {\n          var responseJSON = JSON.parse(request.responseText);\n          if (responseJSON.status === 'OK' || props.isNewPlacesAPI && responseJSON.id) {\n            var details = props.isNewPlacesAPI ? responseJSON : responseJSON.result;\n            _disableRowLoaders();\n            _onBlur();\n            setStateText(_renderDescription(rowData));\n            delete rowData.isLoading;\n            props.onPress(rowData, details);\n          } else {\n            _disableRowLoaders();\n            if (props.autoFillOnNotFound) {\n              setStateText(_renderDescription(rowData));\n              delete rowData.isLoading;\n            }\n            if (!props.onNotFound) {\n              console.warn('google places autocomplete: ' + responseJSON.status);\n            } else {\n              props.onNotFound(responseJSON);\n            }\n          }\n        } else {\n          _disableRowLoaders();\n          if (!props.onFail) {\n            console.warn('google places autocomplete: request could not be completed or has been aborted');\n          } else {\n            props.onFail('request could not be completed or has been aborted');\n          }\n        }\n      };\n      if (props.isNewPlacesAPI) {\n        request.open('GET', url + \"/v1/places/\" + rowData.place_id + \"?\" + Qs.stringify({\n          key: props.query.key,\n          sessionToken: sessionToken,\n          fields: props.fields\n        }));\n        setSessionToken(uuidv4());\n      } else {\n        request.open('GET', url + \"/place/details/json?\" + Qs.stringify(_objectSpread({\n          key: props.query.key,\n          placeid: rowData.place_id,\n          language: props.query.language\n        }, props.GooglePlacesDetailsQuery)));\n      }\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n      request.send();\n    } else if (rowData.isCurrentLocation === true) {\n      _enableRowLoader(rowData);\n      setStateText(_renderDescription(rowData));\n      delete rowData.isLoading;\n      getCurrentLocation();\n    } else {\n      setStateText(_renderDescription(rowData));\n      _onBlur();\n      delete rowData.isLoading;\n      var predefinedPlace = _getPredefinedPlace(rowData);\n      props.onPress(predefinedPlace, predefinedPlace);\n    }\n  };\n  var _enableRowLoader = function _enableRowLoader(rowData) {\n    var rows = buildRowsFromResults(_results);\n    for (var i = 0; i < rows.length; i++) {\n      if (rows[i].place_id === rowData.place_id || rows[i].isCurrentLocation === true && rowData.isCurrentLocation === true) {\n        rows[i].isLoading = true;\n        setDataSource(rows);\n        break;\n      }\n    }\n  };\n  var _disableRowLoaders = function _disableRowLoaders() {\n    for (var i = 0; i < _results.length; i++) {\n      if (_results[i].isLoading === true) {\n        _results[i].isLoading = false;\n      }\n    }\n    setDataSource(buildRowsFromResults(_results));\n  };\n  var _getPredefinedPlace = function _getPredefinedPlace(rowData) {\n    if (rowData.isPredefinedPlace !== true) {\n      return rowData;\n    }\n    for (var i = 0; i < props.predefinedPlaces.length; i++) {\n      if (props.predefinedPlaces[i].description === rowData.description) {\n        return props.predefinedPlaces[i];\n      }\n    }\n    return rowData;\n  };\n  var _filterResultsByTypes = function _filterResultsByTypes(unfilteredResults, types) {\n    if (types.length === 0) return unfilteredResults;\n    var results = [];\n    for (var i = 0; i < unfilteredResults.length; i++) {\n      var found = false;\n      for (var j = 0; j < types.length; j++) {\n        if (unfilteredResults[i].types.indexOf(types[j]) !== -1) {\n          found = true;\n          break;\n        }\n      }\n      if (found === true) {\n        results.push(unfilteredResults[i]);\n      }\n    }\n    return results;\n  };\n  var _filterResultsByPlacePredictions = function _filterResultsByPlacePredictions(unfilteredResults) {\n    var results = [];\n    for (var i = 0; i < unfilteredResults.length; i++) {\n      if (unfilteredResults[i].placePrediction) {\n        var _unfilteredResults$i$, _unfilteredResults$i$2, _unfilteredResults$i$3, _unfilteredResults$i$4, _unfilteredResults$i$5, _unfilteredResults$i$6;\n        results.push({\n          description: (_unfilteredResults$i$ = unfilteredResults[i].placePrediction.text) == null ? void 0 : _unfilteredResults$i$.text,\n          place_id: unfilteredResults[i].placePrediction.placeId,\n          reference: unfilteredResults[i].placePrediction.placeId,\n          structured_formatting: {\n            main_text: (_unfilteredResults$i$2 = unfilteredResults[i].placePrediction.structuredFormat) == null ? void 0 : (_unfilteredResults$i$3 = _unfilteredResults$i$2.mainText) == null ? void 0 : _unfilteredResults$i$3.text,\n            secondary_text: (_unfilteredResults$i$4 = unfilteredResults[i].placePrediction.structuredFormat) == null ? void 0 : (_unfilteredResults$i$5 = _unfilteredResults$i$4.secondaryText) == null ? void 0 : _unfilteredResults$i$5.text\n          },\n          types: (_unfilteredResults$i$6 = unfilteredResults[i].placePrediction.types) != null ? _unfilteredResults$i$6 : []\n        });\n      }\n    }\n    return results;\n  };\n  var _requestNearby = function _requestNearby(latitude, longitude) {\n    _abortRequests();\n    if (latitude !== undefined && longitude !== undefined && latitude !== null && longitude !== null) {\n      var request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = function () {\n        if (request.readyState !== 4) {\n          setListLoaderDisplayed(true);\n          return;\n        }\n        setListLoaderDisplayed(false);\n        if (request.status === 200) {\n          var responseJSON = JSON.parse(request.responseText);\n          _disableRowLoaders();\n          if (typeof responseJSON.results !== 'undefined') {\n            var results = [];\n            if (props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n              results = _filterResultsByTypes(responseJSON.results, props.filterReverseGeocodingByTypes);\n            } else {\n              results = responseJSON.results;\n            }\n            setDataSource(buildRowsFromResults(results));\n          }\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!props.onFail) console.warn('google places autocomplete: ' + responseJSON.error_message);else {\n              props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {}\n      };\n      var requestUrl = '';\n      if (props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n        requestUrl = url + \"/geocode/json?\" + Qs.stringify(_objectSpread({\n          latlng: latitude + ',' + longitude,\n          key: props.query.key\n        }, props.GoogleReverseGeocodingQuery));\n      } else {\n        requestUrl = url + \"/place/nearbysearch/json?\" + Qs.stringify(_objectSpread({\n          location: latitude + ',' + longitude,\n          key: props.query.key\n        }, props.GooglePlacesSearchQuery));\n      }\n      request.open('GET', requestUrl);\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n      request.send();\n    } else {\n      _results = [];\n      setDataSource(buildRowsFromResults([]));\n    }\n  };\n  var _request = function _request(text) {\n    _abortRequests();\n    if (!url) {\n      return;\n    }\n    if (supportedPlatform() && text && text.length >= props.minLength) {\n      var request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = function () {\n        if (request.readyState !== 4) {\n          setListLoaderDisplayed(true);\n          return;\n        }\n        setListLoaderDisplayed(false);\n        if (request.status === 200) {\n          var responseJSON = JSON.parse(request.responseText);\n          if (typeof responseJSON.predictions !== 'undefined') {\n            var results = props.nearbyPlacesAPI === 'GoogleReverseGeocoding' ? _filterResultsByTypes(responseJSON.predictions, props.filterReverseGeocodingByTypes) : responseJSON.predictions;\n            _results = results;\n            setDataSource(buildRowsFromResults(results, text));\n          }\n          if (typeof responseJSON.suggestions !== 'undefined') {\n            var _results2 = _filterResultsByPlacePredictions(responseJSON.suggestions);\n            _results = _results2;\n            setDataSource(buildRowsFromResults(_results2, text));\n          }\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!props.onFail) console.warn('google places autocomplete: ' + responseJSON.error_message);else {\n              props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {}\n      };\n      if (props.preProcess) {\n        setStateText(props.preProcess(text));\n      }\n      if (props.isNewPlacesAPI) {\n        var keyQueryParam = props.query.key ? '?' + Qs.stringify({\n          key: props.query.key\n        }) : '';\n        request.open('POST', url + \"/v1/places:autocomplete\" + keyQueryParam);\n      } else {\n        request.open('GET', url + \"/place/autocomplete/json?input=\" + encodeURIComponent(text) + '&' + Qs.stringify(props.query));\n      }\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n      if (props.isNewPlacesAPI) {\n        var _props$query = props.query,\n          key = _props$query.key,\n          locationbias = _props$query.locationbias,\n          types = _props$query.types,\n          rest = _objectWithoutProperties(_props$query, _excluded);\n        request.send(JSON.stringify(_objectSpread({\n          input: text,\n          sessionToken: sessionToken\n        }, rest)));\n      } else {\n        request.send();\n      }\n    } else {\n      _results = [];\n      setDataSource(buildRowsFromResults([]));\n    }\n  };\n  var debounceData = useMemo(function () {\n    return debounce(_request, props.debounce);\n  }, [props.query, url]);\n  var _onChangeText = function _onChangeText(text) {\n    setStateText(text);\n    debounceData(text);\n  };\n  var _handleChangeText = function _handleChangeText(text) {\n    var _props$textInputProps;\n    _onChangeText(text);\n    var onChangeText = props == null ? void 0 : (_props$textInputProps = props.textInputProps) == null ? void 0 : _props$textInputProps.onChangeText;\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  };\n  var _getRowLoader = function _getRowLoader() {\n    return _jsx(ActivityIndicator, {\n      animating: true,\n      size: \"small\"\n    });\n  };\n  var _renderRowData = function _renderRowData(rowData, index) {\n    if (props.renderRow) {\n      return props.renderRow(rowData, index);\n    }\n    return _jsx(Text, {\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.description, props.styles.description, rowData.isPredefinedPlace ? props.styles.predefinedPlacesDescription : {}],\n      numberOfLines: props.numberOfLines,\n      children: _renderDescription(rowData)\n    });\n  };\n  var _renderDescription = function _renderDescription(rowData) {\n    if (props.renderDescription) {\n      return props.renderDescription(rowData);\n    }\n    return rowData.description || rowData.formatted_address || rowData.name;\n  };\n  var _renderLoader = function _renderLoader(rowData) {\n    if (rowData.isLoading === true) {\n      return _jsx(View, {\n        style: [props.suppressDefaultStyles ? {} : defaultStyles.loader, props.styles.loader],\n        children: _getRowLoader()\n      });\n    }\n    return null;\n  };\n  var _renderRow = function _renderRow() {\n    var rowData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var index = arguments.length > 1 ? arguments[1] : undefined;\n    return _jsx(ScrollView, {\n      contentContainerStyle: props.isRowScrollable ? {\n        minWidth: '100%'\n      } : {\n        width: '100%'\n      },\n      scrollEnabled: props.isRowScrollable,\n      keyboardShouldPersistTaps: props.keyboardShouldPersistTaps,\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      children: _jsx(Pressable, {\n        style: function style(_ref) {\n          var hovered = _ref.hovered,\n            pressed = _ref.pressed;\n          return [props.isRowScrollable ? {\n            minWidth: '100%'\n          } : {\n            width: '100%'\n          }, {\n            backgroundColor: pressed ? props.listUnderlayColor : hovered ? props.listHoverColor : undefined\n          }];\n        },\n        onPress: function onPress() {\n          return _onPress(rowData);\n        },\n        onBlur: _onBlur,\n        children: _jsxs(View, {\n          style: [props.suppressDefaultStyles ? {} : defaultStyles.row, props.styles.row, rowData.isPredefinedPlace ? props.styles.specialItemRow : {}],\n          children: [_renderLoader(rowData), _renderRowData(rowData, index)]\n        })\n      })\n    });\n  };\n  var _renderSeparator = function _renderSeparator(sectionID, rowID) {\n    if (rowID === dataSource.length - 1) {\n      return null;\n    }\n    return _jsx(View, {\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.separator, props.styles.separator]\n    }, sectionID + \"-\" + rowID);\n  };\n  var isNewFocusInAutocompleteResultList = function isNewFocusInAutocompleteResultList(_ref2) {\n    var relatedTarget = _ref2.relatedTarget,\n      currentTarget = _ref2.currentTarget;\n    if (!relatedTarget) return false;\n    var node = relatedTarget.parentNode;\n    while (node) {\n      if (node.id === 'result-list-id') return true;\n      node = node.parentNode;\n    }\n    return false;\n  };\n  var _onBlur = function _onBlur(e) {\n    var _inputRef$current;\n    if (e && isNewFocusInAutocompleteResultList(e)) return;\n    if (!props.keepResultsAfterBlur) {\n      setListViewDisplayed(false);\n    }\n    inputRef == null ? void 0 : (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.blur();\n  };\n  var _onFocus = function _onFocus() {\n    return setListViewDisplayed(true);\n  };\n  var _renderPoweredLogo = function _renderPoweredLogo() {\n    if (!_shouldShowPoweredLogo()) {\n      return null;\n    }\n    return _jsx(View, {\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.row, defaultStyles.poweredContainer, props.styles.poweredContainer],\n      children: _jsx(Image, {\n        style: [props.suppressDefaultStyles ? {} : defaultStyles.powered, props.styles.powered],\n        resizeMode: \"contain\",\n        source: require(\"./images/powered_by_google_on_white.png\")\n      })\n    });\n  };\n  var _shouldShowPoweredLogo = function _shouldShowPoweredLogo() {\n    if (!props.enablePoweredByContainer || dataSource.length === 0) {\n      return false;\n    }\n    for (var i = 0; i < dataSource.length; i++) {\n      var row = dataSource[i];\n      if (!row.hasOwnProperty('isCurrentLocation') && !row.hasOwnProperty('isPredefinedPlace')) {\n        return true;\n      }\n    }\n    return false;\n  };\n  var _renderLeftButton = function _renderLeftButton() {\n    if (props.renderLeftButton) {\n      return props.renderLeftButton();\n    }\n  };\n  var _renderRightButton = function _renderRightButton() {\n    if (props.renderRightButton) {\n      return props.renderRightButton();\n    }\n  };\n  var _getFlatList = function _getFlatList() {\n    var keyGenerator = function keyGenerator() {\n      return Math.random().toString(36).substr(2, 10);\n    };\n    if (supportedPlatform() && (stateText !== '' || props.predefinedPlaces.length > 0 || props.currentLocation === true) && listViewDisplayed === true) {\n      return _jsx(FlatList, _objectSpread({\n        nativeID: \"result-list-id\",\n        scrollEnabled: !props.disableScroll,\n        style: [props.suppressDefaultStyles ? {} : defaultStyles.listView, props.styles.listView],\n        data: dataSource,\n        keyExtractor: keyGenerator,\n        extraData: [dataSource, props],\n        ItemSeparatorComponent: _renderSeparator,\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item,\n            index = _ref3.index;\n          return _renderRow(item, index);\n        },\n        ListEmptyComponent: listLoaderDisplayed ? props.listLoaderComponent : stateText.length > props.minLength && props.listEmptyComponent,\n        ListHeaderComponent: props.renderHeaderComponent && props.renderHeaderComponent(stateText),\n        ListFooterComponent: _renderPoweredLogo\n      }, props));\n    }\n    return null;\n  };\n  var _props$textInputProps2 = props.textInputProps,\n    onFocus = _props$textInputProps2.onFocus,\n    onBlur = _props$textInputProps2.onBlur,\n    onChangeText = _props$textInputProps2.onChangeText,\n    clearButtonMode = _props$textInputProps2.clearButtonMode,\n    InputComp = _props$textInputProps2.InputComp,\n    userProps = _objectWithoutProperties(_props$textInputProps2, _excluded2);\n  var TextInputComp = InputComp || TextInput;\n  return _jsxs(View, {\n    style: [props.suppressDefaultStyles ? {} : defaultStyles.container, props.styles.container],\n    pointerEvents: \"box-none\",\n    children: [!props.textInputHide && _jsxs(View, {\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.textInputContainer, props.styles.textInputContainer],\n      children: [_renderLeftButton(), _jsx(TextInputComp, _objectSpread({\n        ref: inputRef,\n        style: [props.suppressDefaultStyles ? {} : defaultStyles.textInput, props.styles.textInput],\n        value: stateText,\n        placeholder: props.placeholder,\n        onFocus: onFocus ? function (e) {\n          _onFocus();\n          onFocus(e);\n        } : _onFocus,\n        onBlur: onBlur ? function (e) {\n          _onBlur(e);\n          onBlur(e);\n        } : _onBlur,\n        clearButtonMode: clearButtonMode || 'while-editing',\n        onChangeText: _handleChangeText\n      }, userProps)), _renderRightButton()]\n    }), props.inbetweenCompo, _getFlatList(), props.children]\n  });\n});\nGooglePlacesAutocomplete.propTypes = {\n  autoFillOnNotFound: PropTypes.bool,\n  currentLocation: PropTypes.bool,\n  currentLocationLabel: PropTypes.string,\n  debounce: PropTypes.number,\n  disableScroll: PropTypes.bool,\n  enableHighAccuracyLocation: PropTypes.bool,\n  enablePoweredByContainer: PropTypes.bool,\n  fetchDetails: PropTypes.bool,\n  filterReverseGeocodingByTypes: PropTypes.array,\n  GooglePlacesDetailsQuery: PropTypes.object,\n  GooglePlacesSearchQuery: PropTypes.object,\n  GoogleReverseGeocodingQuery: PropTypes.object,\n  inbetweenCompo: PropTypes.object,\n  isRowScrollable: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n  listEmptyComponent: PropTypes.element,\n  listLoaderComponent: PropTypes.element,\n  listHoverColor: PropTypes.string,\n  listUnderlayColor: PropTypes.string,\n  listViewDisplayed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['auto'])]),\n  keepResultsAfterBlur: PropTypes.bool,\n  minLength: PropTypes.number,\n  nearbyPlacesAPI: PropTypes.string,\n  numberOfLines: PropTypes.number,\n  onFail: PropTypes.func,\n  onNotFound: PropTypes.func,\n  onPress: PropTypes.func,\n  onTimeout: PropTypes.func,\n  placeholder: PropTypes.string,\n  predefinedPlaces: PropTypes.array,\n  predefinedPlacesAlwaysVisible: PropTypes.bool,\n  preProcess: PropTypes.func,\n  query: PropTypes.object,\n  renderDescription: PropTypes.func,\n  renderHeaderComponent: PropTypes.func,\n  renderLeftButton: PropTypes.func,\n  renderRightButton: PropTypes.func,\n  renderRow: PropTypes.func,\n  requestUrl: PropTypes.shape({\n    url: PropTypes.string,\n    useOnPlatform: PropTypes.oneOf(['web', 'all']),\n    headers: PropTypes.objectOf(PropTypes.string)\n  }),\n  styles: PropTypes.object,\n  suppressDefaultStyles: PropTypes.bool,\n  textInputHide: PropTypes.bool,\n  textInputProps: PropTypes.object,\n  timeout: PropTypes.number,\n  isNewPlacesAPI: PropTypes.bool,\n  fields: PropTypes.string\n};\nGooglePlacesAutocomplete.defaultProps = {\n  autoFillOnNotFound: false,\n  currentLocation: false,\n  currentLocationLabel: 'Current location',\n  debounce: 0,\n  disableScroll: false,\n  enableHighAccuracyLocation: true,\n  enablePoweredByContainer: true,\n  fetchDetails: false,\n  filterReverseGeocodingByTypes: [],\n  GooglePlacesDetailsQuery: {},\n  GooglePlacesSearchQuery: {\n    rankby: 'distance',\n    type: 'restaurant'\n  },\n  GoogleReverseGeocodingQuery: {},\n  isRowScrollable: true,\n  keyboardShouldPersistTaps: 'always',\n  listHoverColor: '#ececec',\n  listUnderlayColor: '#c8c7cc',\n  listViewDisplayed: 'auto',\n  keepResultsAfterBlur: false,\n  minLength: 0,\n  nearbyPlacesAPI: 'GooglePlacesSearch',\n  numberOfLines: 1,\n  onFail: function onFail() {},\n  onNotFound: function onNotFound() {},\n  onPress: function onPress() {},\n  onTimeout: function onTimeout() {\n    return console.warn('google places autocomplete: request timeout');\n  },\n  placeholder: '',\n  predefinedPlaces: [],\n  predefinedPlacesAlwaysVisible: false,\n  query: {\n    key: 'missing api key',\n    language: 'en',\n    types: 'geocode'\n  },\n  styles: {},\n  suppressDefaultStyles: false,\n  textInputHide: false,\n  textInputProps: {},\n  timeout: 20000,\n  isNewPlacesAPI: false,\n  fields: '*'\n};\nGooglePlacesAutocomplete.displayName = 'GooglePlacesAutocomplete';\nexport default {\n  GooglePlacesAutocomplete: GooglePlacesAutocomplete\n};","map":{"version":3,"names":["debounce","PropTypes","Qs","v4","uuidv4","React","forwardRef","useMemo","useEffect","useImperativeHandle","useRef","useState","useCallback","ActivityIndicator","FlatList","Image","Keyboard","Platform","Pressable","ScrollView","StyleSheet","Text","TextInput","View","jsx","_jsx","jsxs","_jsxs","defaultStyles","container","flex","textInputContainer","flexDirection","textInput","backgroundColor","height","borderRadius","paddingVertical","paddingHorizontal","fontSize","marginBottom","listView","row","padding","minHeight","loader","justifyContent","description","separator","hairlineWidth","poweredContainer","alignItems","borderBottomRightRadius","borderBottomLeftRadius","borderColor","borderTopWidth","powered","GooglePlacesAutocomplete","props","ref","_results","_requests","hasNavigator","_navigator","navigator","geolocation","console","warn","buildRowsFromResults","results","text","res","shouldDisplayPredefinedPlaces","length","predefinedPlacesAlwaysVisible","_toConsumableArray","predefinedPlaces","filter","place","currentLocation","unshift","currentLocationLabel","isCurrentLocation","map","_objectSpread","isPredefinedPlace","concat","getRequestUrl","requestUrl","useOnPlatform","url","select","web","default","getRequestHeaders","headers","setRequestHeaders","request","Object","keys","headerKey","setRequestHeader","_useState","_useState2","_slicedToArray","stateText","setStateText","_useState3","_useState4","dataSource","setDataSource","_useState5","listViewDisplayed","_useState6","setListViewDisplayed","_useState7","_useState8","setUrl","_useState9","_useState10","listLoaderDisplayed","setListLoaderDisplayed","inputRef","_useState11","_useState12","sessionToken","setSessionToken","_handleChangeText","_abortRequests","query","setAddressText","address","getAddressText","blur","current","focus","isFocused","clear","getCurrentLocation","requestShouldUseWithCredentials","i","onreadystatechange","abort","supportedPlatform","OS","options","enableHighAccuracy","timeout","maximumAge","enableHighAccuracyLocation","getCurrentPosition","position","nearbyPlacesAPI","geometry","location","lat","coords","latitude","lng","longitude","_disableRowLoaders","onPress","_requestNearby","error","message","_onPress","rowData","fetchDetails","isLoading","dismiss","_enableRowLoader","XMLHttpRequest","push","ontimeout","onTimeout","readyState","status","responseJSON","JSON","parse","responseText","isNewPlacesAPI","id","details","result","_onBlur","_renderDescription","autoFillOnNotFound","onNotFound","onFail","open","place_id","stringify","key","fields","placeid","language","GooglePlacesDetailsQuery","withCredentials","send","predefinedPlace","_getPredefinedPlace","rows","_filterResultsByTypes","unfilteredResults","types","found","j","indexOf","_filterResultsByPlacePredictions","placePrediction","_unfilteredResults$i$","_unfilteredResults$i$2","_unfilteredResults$i$3","_unfilteredResults$i$4","_unfilteredResults$i$5","_unfilteredResults$i$6","placeId","reference","structured_formatting","main_text","structuredFormat","mainText","secondary_text","secondaryText","undefined","filterReverseGeocodingByTypes","error_message","latlng","GoogleReverseGeocodingQuery","GooglePlacesSearchQuery","_request","minLength","predictions","suggestions","preProcess","keyQueryParam","encodeURIComponent","_props$query","locationbias","rest","_objectWithoutProperties","_excluded","input","debounceData","_onChangeText","_props$textInputProps","onChangeText","textInputProps","_getRowLoader","animating","size","_renderRowData","index","renderRow","style","suppressDefaultStyles","styles","predefinedPlacesDescription","numberOfLines","children","renderDescription","formatted_address","name","_renderLoader","_renderRow","arguments","contentContainerStyle","isRowScrollable","minWidth","width","scrollEnabled","keyboardShouldPersistTaps","horizontal","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","_ref","hovered","pressed","listUnderlayColor","listHoverColor","onBlur","specialItemRow","_renderSeparator","sectionID","rowID","isNewFocusInAutocompleteResultList","_ref2","relatedTarget","currentTarget","node","parentNode","e","_inputRef$current","keepResultsAfterBlur","_onFocus","_renderPoweredLogo","_shouldShowPoweredLogo","resizeMode","source","require","enablePoweredByContainer","hasOwnProperty","_renderLeftButton","renderLeftButton","_renderRightButton","renderRightButton","_getFlatList","keyGenerator","Math","random","toString","substr","nativeID","disableScroll","data","keyExtractor","extraData","ItemSeparatorComponent","renderItem","_ref3","item","ListEmptyComponent","listLoaderComponent","listEmptyComponent","ListHeaderComponent","renderHeaderComponent","ListFooterComponent","_props$textInputProps2","onFocus","clearButtonMode","InputComp","userProps","_excluded2","TextInputComp","pointerEvents","textInputHide","value","placeholder","inbetweenCompo","propTypes","bool","string","number","array","object","oneOf","element","oneOfType","func","shape","objectOf","defaultProps","rankby","type","displayName"],"sources":["C:/Users/jsh4f/Downloads/undefeated_landscaping_expo/node_modules/react-native-google-places-autocomplete/GooglePlacesAutocomplete.js"],"sourcesContent":["/* eslint-disable react-native/no-inline-styles */\nimport debounce from 'lodash.debounce';\nimport PropTypes from 'prop-types';\nimport Qs from 'qs';\nimport { v4 as uuidv4 } from 'uuid';\nimport React, {\n  forwardRef,\n  useMemo,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport {\n  ActivityIndicator,\n  FlatList,\n  Image,\n  Keyboard,\n  Platform,\n  Pressable,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n} from 'react-native';\n\nconst defaultStyles = {\n  container: {\n    flex: 1,\n  },\n  textInputContainer: {\n    flexDirection: 'row',\n  },\n  textInput: {\n    backgroundColor: '#FFFFFF',\n    height: 44,\n    borderRadius: 5,\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    fontSize: 15,\n    flex: 1,\n    marginBottom: 5,\n  },\n  listView: {},\n  row: {\n    backgroundColor: '#FFFFFF',\n    padding: 13,\n    minHeight: 44,\n    flexDirection: 'row',\n  },\n  loader: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    height: 20,\n  },\n  description: {},\n  separator: {\n    height: StyleSheet.hairlineWidth,\n    backgroundColor: '#c8c7cc',\n  },\n  poweredContainer: {\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n    borderColor: '#c8c7cc',\n    borderTopWidth: 0.5,\n  },\n  powered: {},\n};\n\nexport const GooglePlacesAutocomplete = forwardRef((props, ref) => {\n  let _results = [];\n  let _requests = [];\n\n  const hasNavigator = () => {\n    if (navigator?.geolocation) {\n      return true;\n    } else {\n      console.warn(\n        'If you are using React Native v0.60.0+ you must follow these instructions to enable currentLocation: https://git.io/Jf4AR',\n      );\n      return false;\n    }\n  };\n\n  const buildRowsFromResults = useCallback(\n    (results, text) => {\n      let res = [];\n      const shouldDisplayPredefinedPlaces = text\n        ? results.length === 0 && text.length === 0\n        : results.length === 0;\n      if (\n        shouldDisplayPredefinedPlaces ||\n        props.predefinedPlacesAlwaysVisible === true\n      ) {\n        res = [\n          ...props.predefinedPlaces.filter(\n            (place) => place?.description.length,\n          ),\n        ];\n\n        if (props.currentLocation === true && hasNavigator()) {\n          res.unshift({\n            description: props.currentLocationLabel,\n            isCurrentLocation: true,\n          });\n        }\n      }\n\n      res = res.map((place) => ({\n        ...place,\n        isPredefinedPlace: true,\n      }));\n\n      return [...res, ...results];\n    },\n    [\n      props.currentLocation,\n      props.currentLocationLabel,\n      props.predefinedPlaces,\n      props.predefinedPlacesAlwaysVisible,\n    ],\n  );\n\n  const getRequestUrl = useCallback((requestUrl) => {\n    if (requestUrl) {\n      if (requestUrl.useOnPlatform === 'all') {\n        return requestUrl.url;\n      }\n      if (requestUrl.useOnPlatform === 'web') {\n        return Platform.select({\n          web: requestUrl.url,\n          default: 'https://maps.googleapis.com/maps/api',\n        });\n      }\n    } else {\n      return 'https://maps.googleapis.com/maps/api';\n    }\n  }, []);\n\n  const getRequestHeaders = (requestUrl) => {\n    return requestUrl?.headers || {};\n  };\n\n  const setRequestHeaders = (request, headers) => {\n    Object.keys(headers).map((headerKey) =>\n      request.setRequestHeader(headerKey, headers[headerKey]),\n    );\n  };\n\n  const [stateText, setStateText] = useState('');\n  const [dataSource, setDataSource] = useState(buildRowsFromResults([]));\n  const [listViewDisplayed, setListViewDisplayed] = useState(\n    props.listViewDisplayed === 'auto' ? false : props.listViewDisplayed,\n  );\n  const [url, setUrl] = useState(getRequestUrl(props.requestUrl));\n  const [listLoaderDisplayed, setListLoaderDisplayed] = useState(false);\n\n  const inputRef = useRef();\n  const [sessionToken, setSessionToken] = useState(uuidv4());\n  useEffect(() => {\n    setUrl(getRequestUrl(props.requestUrl));\n  }, [getRequestUrl, props.requestUrl]);\n\n  useEffect(() => {\n    // This will load the search results after the query object ref gets changed\n    _handleChangeText(stateText);\n    return () => {\n      _abortRequests();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.query]);\n\n  useEffect(() => {\n    // Update dataSource if props.predefinedPlaces changed\n    setDataSource(buildRowsFromResults([]));\n  }, [buildRowsFromResults, props.predefinedPlaces]);\n\n  useImperativeHandle(ref, () => ({\n    setAddressText: (address) => {\n      setStateText(address);\n    },\n    getAddressText: () => stateText,\n    blur: () => inputRef.current.blur(),\n    focus: () => inputRef.current.focus(),\n    isFocused: () => inputRef.current.isFocused(),\n    clear: () => inputRef.current.clear(),\n    getCurrentLocation,\n  }));\n\n  const requestShouldUseWithCredentials = () =>\n    url === 'https://maps.googleapis.com/maps/api';\n\n  const _abortRequests = () => {\n    _requests.map((i) => {\n      i.onreadystatechange = null;\n      i.abort();\n    });\n    _requests = [];\n  };\n\n  const supportedPlatform = () => {\n    if (Platform.OS === 'web' && !props.requestUrl) {\n      console.warn(\n        'This library cannot be used for the web unless you specify the requestUrl prop. See https://git.io/JflFv for more for details.',\n      );\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const getCurrentLocation = () => {\n    let options = {\n      enableHighAccuracy: false,\n      timeout: 20000,\n      maximumAge: 1000,\n    };\n\n    if (props.enableHighAccuracyLocation && Platform.OS === 'android') {\n      options = {\n        enableHighAccuracy: true,\n        timeout: 20000,\n      };\n    }\n    const getCurrentPosition =\n      navigator.geolocation.getCurrentPosition ||\n      navigator.geolocation.default.getCurrentPosition;\n\n    getCurrentPosition &&\n      getCurrentPosition(\n        (position) => {\n          if (props.nearbyPlacesAPI === 'None') {\n            let currentLocation = {\n              description: props.currentLocationLabel,\n              geometry: {\n                location: {\n                  lat: position.coords.latitude,\n                  lng: position.coords.longitude,\n                },\n              },\n            };\n\n            _disableRowLoaders();\n            props.onPress(currentLocation, currentLocation);\n          } else {\n            _requestNearby(position.coords.latitude, position.coords.longitude);\n          }\n        },\n        (error) => {\n          _disableRowLoaders();\n          console.error(error.message);\n        },\n        options,\n      );\n  };\n\n  const _onPress = (rowData) => {\n    if (rowData.isPredefinedPlace !== true && props.fetchDetails === true) {\n      if (rowData.isLoading === true) {\n        // already requesting\n        return;\n      }\n\n      Keyboard.dismiss();\n\n      _abortRequests();\n\n      // display loader\n      _enableRowLoader(rowData);\n\n      // fetch details\n      const request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) return;\n\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n          if (\n            responseJSON.status === 'OK' ||\n            (props.isNewPlacesAPI && responseJSON.id)\n          ) {\n            // if (_isMounted === true) {\n            const details = props.isNewPlacesAPI\n              ? responseJSON\n              : responseJSON.result;\n            _disableRowLoaders();\n            _onBlur();\n\n            setStateText(_renderDescription(rowData));\n\n            delete rowData.isLoading;\n            props.onPress(rowData, details);\n            // }\n          } else {\n            _disableRowLoaders();\n\n            if (props.autoFillOnNotFound) {\n              setStateText(_renderDescription(rowData));\n              delete rowData.isLoading;\n            }\n\n            if (!props.onNotFound) {\n              console.warn(\n                'google places autocomplete: ' + responseJSON.status,\n              );\n            } else {\n              props.onNotFound(responseJSON);\n            }\n          }\n        } else {\n          _disableRowLoaders();\n\n          if (!props.onFail) {\n            console.warn(\n              'google places autocomplete: request could not be completed or has been aborted',\n            );\n          } else {\n            props.onFail('request could not be completed or has been aborted');\n          }\n        }\n      };\n\n      if (props.isNewPlacesAPI) {\n        request.open(\n          'GET',\n          `${url}/v1/places/${rowData.place_id}?` +\n            Qs.stringify({\n              key: props.query.key,\n              sessionToken,\n              fields: props.fields,\n            }),\n        );\n        setSessionToken(uuidv4());\n      } else {\n        request.open(\n          'GET',\n          `${url}/place/details/json?` +\n            Qs.stringify({\n              key: props.query.key,\n              placeid: rowData.place_id,\n              language: props.query.language,\n              ...props.GooglePlacesDetailsQuery,\n            }),\n        );\n      }\n\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n\n      request.send();\n    } else if (rowData.isCurrentLocation === true) {\n      // display loader\n      _enableRowLoader(rowData);\n\n      setStateText(_renderDescription(rowData));\n\n      delete rowData.isLoading;\n      getCurrentLocation();\n    } else {\n      setStateText(_renderDescription(rowData));\n\n      _onBlur();\n      delete rowData.isLoading;\n      let predefinedPlace = _getPredefinedPlace(rowData);\n\n      // sending predefinedPlace as details for predefined places\n      props.onPress(predefinedPlace, predefinedPlace);\n    }\n  };\n\n  const _enableRowLoader = (rowData) => {\n    let rows = buildRowsFromResults(_results);\n    for (let i = 0; i < rows.length; i++) {\n      if (\n        rows[i].place_id === rowData.place_id ||\n        (rows[i].isCurrentLocation === true &&\n          rowData.isCurrentLocation === true)\n      ) {\n        rows[i].isLoading = true;\n        setDataSource(rows);\n        break;\n      }\n    }\n  };\n\n  const _disableRowLoaders = () => {\n    // if (_isMounted === true) {\n    for (let i = 0; i < _results.length; i++) {\n      if (_results[i].isLoading === true) {\n        _results[i].isLoading = false;\n      }\n    }\n\n    setDataSource(buildRowsFromResults(_results));\n    // }\n  };\n\n  const _getPredefinedPlace = (rowData) => {\n    if (rowData.isPredefinedPlace !== true) {\n      return rowData;\n    }\n\n    for (let i = 0; i < props.predefinedPlaces.length; i++) {\n      if (props.predefinedPlaces[i].description === rowData.description) {\n        return props.predefinedPlaces[i];\n      }\n    }\n\n    return rowData;\n  };\n\n  const _filterResultsByTypes = (unfilteredResults, types) => {\n    if (types.length === 0) return unfilteredResults;\n\n    const results = [];\n    for (let i = 0; i < unfilteredResults.length; i++) {\n      let found = false;\n\n      for (let j = 0; j < types.length; j++) {\n        if (unfilteredResults[i].types.indexOf(types[j]) !== -1) {\n          found = true;\n          break;\n        }\n      }\n\n      if (found === true) {\n        results.push(unfilteredResults[i]);\n      }\n    }\n    return results;\n  };\n\n  const _filterResultsByPlacePredictions = (unfilteredResults) => {\n    const results = [];\n    for (let i = 0; i < unfilteredResults.length; i++) {\n      if (unfilteredResults[i].placePrediction) {\n        results.push({\n          description: unfilteredResults[i].placePrediction.text?.text,\n          place_id: unfilteredResults[i].placePrediction.placeId,\n          reference: unfilteredResults[i].placePrediction.placeId,\n          structured_formatting: {\n            main_text:\n              unfilteredResults[i].placePrediction.structuredFormat?.mainText\n                ?.text,\n            secondary_text:\n              unfilteredResults[i].placePrediction.structuredFormat\n                ?.secondaryText?.text,\n          },\n          types: unfilteredResults[i].placePrediction.types ?? [],\n        });\n      }\n    }\n    return results;\n  };\n\n  const _requestNearby = (latitude, longitude) => {\n    _abortRequests();\n\n    if (\n      latitude !== undefined &&\n      longitude !== undefined &&\n      latitude !== null &&\n      longitude !== null\n    ) {\n      const request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) {\n          setListLoaderDisplayed(true);\n          return;\n        }\n\n        setListLoaderDisplayed(false);\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n\n          _disableRowLoaders();\n\n          if (typeof responseJSON.results !== 'undefined') {\n            // if (_isMounted === true) {\n            var results = [];\n            if (props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n              results = _filterResultsByTypes(\n                responseJSON.results,\n                props.filterReverseGeocodingByTypes,\n              );\n            } else {\n              results = responseJSON.results;\n            }\n\n            setDataSource(buildRowsFromResults(results));\n            // }\n          }\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!props.onFail)\n              console.warn(\n                'google places autocomplete: ' + responseJSON.error_message,\n              );\n            else {\n              props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {\n          // console.warn(\"google places autocomplete: request could not be completed or has been aborted\");\n        }\n      };\n\n      let requestUrl = '';\n      if (props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n        // your key must be allowed to use Google Maps Geocoding API\n        requestUrl =\n          `${url}/geocode/json?` +\n          Qs.stringify({\n            latlng: latitude + ',' + longitude,\n            key: props.query.key,\n            ...props.GoogleReverseGeocodingQuery,\n          });\n      } else {\n        requestUrl =\n          `${url}/place/nearbysearch/json?` +\n          Qs.stringify({\n            location: latitude + ',' + longitude,\n            key: props.query.key,\n            ...props.GooglePlacesSearchQuery,\n          });\n      }\n\n      request.open('GET', requestUrl);\n\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n\n      request.send();\n    } else {\n      _results = [];\n      setDataSource(buildRowsFromResults([]));\n    }\n  };\n\n  const _request = (text) => {\n    _abortRequests();\n    if (!url) {\n      return;\n    }\n    if (supportedPlatform() && text && text.length >= props.minLength) {\n      const request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) {\n          setListLoaderDisplayed(true);\n          return;\n        }\n\n        setListLoaderDisplayed(false);\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n\n          if (typeof responseJSON.predictions !== 'undefined') {\n            // if (_isMounted === true) {\n            const results =\n              props.nearbyPlacesAPI === 'GoogleReverseGeocoding'\n                ? _filterResultsByTypes(\n                    responseJSON.predictions,\n                    props.filterReverseGeocodingByTypes,\n                  )\n                : responseJSON.predictions;\n\n            _results = results;\n            setDataSource(buildRowsFromResults(results, text));\n            // }\n          }\n          if (typeof responseJSON.suggestions !== 'undefined') {\n            const results = _filterResultsByPlacePredictions(\n              responseJSON.suggestions,\n            );\n\n            _results = results;\n            setDataSource(buildRowsFromResults(results, text));\n          }\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!props.onFail)\n              console.warn(\n                'google places autocomplete: ' + responseJSON.error_message,\n              );\n            else {\n              props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {\n          // console.warn(\"google places autocomplete: request could not be completed or has been aborted\");\n        }\n      };\n\n      if (props.preProcess) {\n        setStateText(props.preProcess(text));\n      }\n\n      if (props.isNewPlacesAPI) {\n        const keyQueryParam = props.query.key\n          ? '?' +\n            Qs.stringify({\n              key: props.query.key,\n            })\n          : '';\n        request.open('POST', `${url}/v1/places:autocomplete${keyQueryParam}`);\n      } else {\n        request.open(\n          'GET',\n          `${url}/place/autocomplete/json?input=` +\n            encodeURIComponent(text) +\n            '&' +\n            Qs.stringify(props.query),\n        );\n      }\n\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n\n      if (props.isNewPlacesAPI) {\n        const { key, locationbias, types, ...rest } = props.query;\n        request.send(\n          JSON.stringify({\n            input: text,\n            sessionToken,\n            ...rest,\n          }),\n        );\n      } else {\n        request.send();\n      }\n    } else {\n      _results = [];\n      setDataSource(buildRowsFromResults([]));\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceData = useMemo(() => debounce(_request, props.debounce), [\n    props.query,\n    url,\n  ]);\n\n  const _onChangeText = (text) => {\n    setStateText(text);\n    debounceData(text);\n  };\n\n  const _handleChangeText = (text) => {\n    _onChangeText(text);\n\n    const onChangeText = props?.textInputProps?.onChangeText;\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  };\n\n  const _getRowLoader = () => {\n    return <ActivityIndicator animating={true} size='small' />;\n  };\n\n  const _renderRowData = (rowData, index) => {\n    if (props.renderRow) {\n      return props.renderRow(rowData, index);\n    }\n\n    return (\n      <Text\n        style={[\n          props.suppressDefaultStyles ? {} : defaultStyles.description,\n          props.styles.description,\n          rowData.isPredefinedPlace\n            ? props.styles.predefinedPlacesDescription\n            : {},\n        ]}\n        numberOfLines={props.numberOfLines}\n      >\n        {_renderDescription(rowData)}\n      </Text>\n    );\n  };\n\n  const _renderDescription = (rowData) => {\n    if (props.renderDescription) {\n      return props.renderDescription(rowData);\n    }\n\n    return rowData.description || rowData.formatted_address || rowData.name;\n  };\n\n  const _renderLoader = (rowData) => {\n    if (rowData.isLoading === true) {\n      return (\n        <View\n          style={[\n            props.suppressDefaultStyles ? {} : defaultStyles.loader,\n            props.styles.loader,\n          ]}\n        >\n          {_getRowLoader()}\n        </View>\n      );\n    }\n\n    return null;\n  };\n\n  const _renderRow = (rowData = {}, index) => {\n    return (\n      <ScrollView\n        contentContainerStyle={\n          props.isRowScrollable ? { minWidth: '100%' } : { width: '100%' }\n        }\n        scrollEnabled={props.isRowScrollable}\n        keyboardShouldPersistTaps={props.keyboardShouldPersistTaps}\n        horizontal={true}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n      >\n        <Pressable\n          style={({ hovered, pressed }) => [\n            props.isRowScrollable ? { minWidth: '100%' } : { width: '100%' },\n            {\n              backgroundColor: pressed\n                ? props.listUnderlayColor\n                : hovered\n                ? props.listHoverColor\n                : undefined,\n            },\n          ]}\n          onPress={() => _onPress(rowData)}\n          onBlur={_onBlur}\n        >\n          <View\n            style={[\n              props.suppressDefaultStyles ? {} : defaultStyles.row,\n              props.styles.row,\n              rowData.isPredefinedPlace ? props.styles.specialItemRow : {},\n            ]}\n          >\n            {_renderLoader(rowData)}\n            {_renderRowData(rowData, index)}\n          </View>\n        </Pressable>\n      </ScrollView>\n    );\n  };\n\n  const _renderSeparator = (sectionID, rowID) => {\n    if (rowID === dataSource.length - 1) {\n      return null;\n    }\n\n    return (\n      <View\n        key={`${sectionID}-${rowID}`}\n        style={[\n          props.suppressDefaultStyles ? {} : defaultStyles.separator,\n          props.styles.separator,\n        ]}\n      />\n    );\n  };\n\n  const isNewFocusInAutocompleteResultList = ({\n    relatedTarget,\n    currentTarget,\n  }) => {\n    if (!relatedTarget) return false;\n\n    var node = relatedTarget.parentNode;\n\n    while (node) {\n      if (node.id === 'result-list-id') return true;\n      node = node.parentNode;\n    }\n\n    return false;\n  };\n\n  const _onBlur = (e) => {\n    if (e && isNewFocusInAutocompleteResultList(e)) return;\n\n    if (!props.keepResultsAfterBlur) {\n      setListViewDisplayed(false);\n    }\n    inputRef?.current?.blur();\n  };\n\n  const _onFocus = () => setListViewDisplayed(true);\n\n  const _renderPoweredLogo = () => {\n    if (!_shouldShowPoweredLogo()) {\n      return null;\n    }\n\n    return (\n      <View\n        style={[\n          props.suppressDefaultStyles ? {} : defaultStyles.row,\n          defaultStyles.poweredContainer,\n          props.styles.poweredContainer,\n        ]}\n      >\n        <Image\n          style={[\n            props.suppressDefaultStyles ? {} : defaultStyles.powered,\n            props.styles.powered,\n          ]}\n          resizeMode='contain'\n          source={require('./images/powered_by_google_on_white.png')}\n        />\n      </View>\n    );\n  };\n\n  const _shouldShowPoweredLogo = () => {\n    if (!props.enablePoweredByContainer || dataSource.length === 0) {\n      return false;\n    }\n\n    for (let i = 0; i < dataSource.length; i++) {\n      let row = dataSource[i];\n\n      if (\n        !row.hasOwnProperty('isCurrentLocation') &&\n        !row.hasOwnProperty('isPredefinedPlace')\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const _renderLeftButton = () => {\n    if (props.renderLeftButton) {\n      return props.renderLeftButton();\n    }\n  };\n\n  const _renderRightButton = () => {\n    if (props.renderRightButton) {\n      return props.renderRightButton();\n    }\n  };\n\n  const _getFlatList = () => {\n    const keyGenerator = () => Math.random().toString(36).substr(2, 10);\n\n    if (\n      supportedPlatform() &&\n      (stateText !== '' ||\n        props.predefinedPlaces.length > 0 ||\n        props.currentLocation === true) &&\n      listViewDisplayed === true\n    ) {\n      return (\n        <FlatList\n          nativeID='result-list-id'\n          scrollEnabled={!props.disableScroll}\n          style={[\n            props.suppressDefaultStyles ? {} : defaultStyles.listView,\n            props.styles.listView,\n          ]}\n          data={dataSource}\n          keyExtractor={keyGenerator}\n          extraData={[dataSource, props]}\n          ItemSeparatorComponent={_renderSeparator}\n          renderItem={({ item, index }) => _renderRow(item, index)}\n          ListEmptyComponent={\n            listLoaderDisplayed\n              ? props.listLoaderComponent\n              : stateText.length > props.minLength && props.listEmptyComponent\n          }\n          ListHeaderComponent={\n            props.renderHeaderComponent &&\n            props.renderHeaderComponent(stateText)\n          }\n          ListFooterComponent={_renderPoweredLogo}\n          {...props}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  let {\n    onFocus,\n    onBlur,\n    onChangeText, // destructuring here stops this being set after onChangeText={_handleChangeText}\n    clearButtonMode,\n    InputComp,\n    ...userProps\n  } = props.textInputProps;\n  const TextInputComp = InputComp || TextInput;\n  return (\n    <View\n      style={[\n        props.suppressDefaultStyles ? {} : defaultStyles.container,\n        props.styles.container,\n      ]}\n      pointerEvents='box-none'\n    >\n      {!props.textInputHide && (\n        <View\n          style={[\n            props.suppressDefaultStyles ? {} : defaultStyles.textInputContainer,\n            props.styles.textInputContainer,\n          ]}\n        >\n          {_renderLeftButton()}\n          <TextInputComp\n            ref={inputRef}\n            style={[\n              props.suppressDefaultStyles ? {} : defaultStyles.textInput,\n              props.styles.textInput,\n            ]}\n            value={stateText}\n            placeholder={props.placeholder}\n            onFocus={\n              onFocus\n                ? (e) => {\n                    _onFocus();\n                    onFocus(e);\n                  }\n                : _onFocus\n            }\n            onBlur={\n              onBlur\n                ? (e) => {\n                    _onBlur(e);\n                    onBlur(e);\n                  }\n                : _onBlur\n            }\n            clearButtonMode={clearButtonMode || 'while-editing'}\n            onChangeText={_handleChangeText}\n            {...userProps}\n          />\n          {_renderRightButton()}\n        </View>\n      )}\n      {props.inbetweenCompo}\n      {_getFlatList()}\n      {props.children}\n    </View>\n  );\n});\n\nGooglePlacesAutocomplete.propTypes = {\n  autoFillOnNotFound: PropTypes.bool,\n  currentLocation: PropTypes.bool,\n  currentLocationLabel: PropTypes.string,\n  debounce: PropTypes.number,\n  disableScroll: PropTypes.bool,\n  enableHighAccuracyLocation: PropTypes.bool,\n  enablePoweredByContainer: PropTypes.bool,\n  fetchDetails: PropTypes.bool,\n  filterReverseGeocodingByTypes: PropTypes.array,\n  GooglePlacesDetailsQuery: PropTypes.object,\n  GooglePlacesSearchQuery: PropTypes.object,\n  GoogleReverseGeocodingQuery: PropTypes.object,\n  inbetweenCompo: PropTypes.object,\n  isRowScrollable: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n  listEmptyComponent: PropTypes.element,\n  listLoaderComponent: PropTypes.element,\n  listHoverColor: PropTypes.string,\n  listUnderlayColor: PropTypes.string,\n  // Must write it this way: https://stackoverflow.com/a/54290946/7180620\n  listViewDisplayed: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['auto']),\n  ]),\n  keepResultsAfterBlur: PropTypes.bool,\n  minLength: PropTypes.number,\n  nearbyPlacesAPI: PropTypes.string,\n  numberOfLines: PropTypes.number,\n  onFail: PropTypes.func,\n  onNotFound: PropTypes.func,\n  onPress: PropTypes.func,\n  onTimeout: PropTypes.func,\n  placeholder: PropTypes.string,\n  predefinedPlaces: PropTypes.array,\n  predefinedPlacesAlwaysVisible: PropTypes.bool,\n  preProcess: PropTypes.func,\n  query: PropTypes.object,\n  renderDescription: PropTypes.func,\n  renderHeaderComponent: PropTypes.func,\n  renderLeftButton: PropTypes.func,\n  renderRightButton: PropTypes.func,\n  renderRow: PropTypes.func,\n  requestUrl: PropTypes.shape({\n    url: PropTypes.string,\n    useOnPlatform: PropTypes.oneOf(['web', 'all']),\n    headers: PropTypes.objectOf(PropTypes.string),\n  }),\n  styles: PropTypes.object,\n  suppressDefaultStyles: PropTypes.bool,\n  textInputHide: PropTypes.bool,\n  textInputProps: PropTypes.object,\n  timeout: PropTypes.number,\n  isNewPlacesAPI: PropTypes.bool,\n  fields: PropTypes.string,\n};\n\nGooglePlacesAutocomplete.defaultProps = {\n  autoFillOnNotFound: false,\n  currentLocation: false,\n  currentLocationLabel: 'Current location',\n  debounce: 0,\n  disableScroll: false,\n  enableHighAccuracyLocation: true,\n  enablePoweredByContainer: true,\n  fetchDetails: false,\n  filterReverseGeocodingByTypes: [],\n  GooglePlacesDetailsQuery: {},\n  GooglePlacesSearchQuery: {\n    rankby: 'distance',\n    type: 'restaurant',\n  },\n  GoogleReverseGeocodingQuery: {},\n  isRowScrollable: true,\n  keyboardShouldPersistTaps: 'always',\n  listHoverColor: '#ececec',\n  listUnderlayColor: '#c8c7cc',\n  listViewDisplayed: 'auto',\n  keepResultsAfterBlur: false,\n  minLength: 0,\n  nearbyPlacesAPI: 'GooglePlacesSearch',\n  numberOfLines: 1,\n  onFail: () => {},\n  onNotFound: () => {},\n  onPress: () => {},\n  onTimeout: () => console.warn('google places autocomplete: request timeout'),\n  placeholder: '',\n  predefinedPlaces: [],\n  predefinedPlacesAlwaysVisible: false,\n  query: {\n    key: 'missing api key',\n    language: 'en',\n    types: 'geocode',\n  },\n  styles: {},\n  suppressDefaultStyles: false,\n  textInputHide: false,\n  textInputProps: {},\n  timeout: 20000,\n  isNewPlacesAPI: false,\n  fields: '*',\n};\n\nGooglePlacesAutocomplete.displayName = 'GooglePlacesAutocomplete';\n\nexport default { GooglePlacesAutocomplete };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}