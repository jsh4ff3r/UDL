{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { processColor } from '../Colors';\nimport { makeRemote } from '../core';\nimport { isWeb, isJest } from '../PlatformChecker';\nimport { colorProps } from '../UpdateProps';\nimport WorkletEventHandler from '../WorkletEventHandler';\nexport function useEvent(handler, eventNames = [], rebuild = false) {\n  const initRef = useRef(null);\n  if (initRef.current === null) {\n    initRef.current = new WorkletEventHandler(handler, eventNames);\n  } else if (rebuild) {\n    initRef.current.updateWorklet(handler);\n  }\n  return initRef;\n}\nexport function useHandler(handlers, dependencies) {\n  const initRef = useRef(null);\n  if (initRef.current === null) {\n    initRef.current = {\n      context: makeRemote({}),\n      savedDependencies: []\n    };\n  }\n  useEffect(() => {\n    return () => {\n      initRef.current = null;\n    };\n  }, []);\n  const {\n    context,\n    savedDependencies\n  } = initRef.current;\n  dependencies = buildDependencies(dependencies, handlers);\n  const doDependenciesDiffer = !areDependenciesEqual(dependencies, savedDependencies);\n  initRef.current.savedDependencies = dependencies;\n  const useWeb = isWeb() || isJest();\n  return {\n    context,\n    doDependenciesDiffer,\n    useWeb\n  };\n}\nexport function buildWorkletsHash(handlers) {\n  return Object.values(handlers).reduce((acc, worklet) => acc + worklet.__workletHash.toString(), '');\n}\nexport function buildDependencies(dependencies, handlers) {\n  const handlersList = Object.values(handlers).filter(handler => handler !== undefined);\n  if (!dependencies) {\n    dependencies = handlersList.map(handler => {\n      return {\n        workletHash: handler.__workletHash,\n        closure: handler._closure\n      };\n    });\n  } else {\n    dependencies.push(buildWorkletsHash(handlersList));\n  }\n  return dependencies;\n}\nexport function areDependenciesEqual(nextDeps, prevDeps) {\n  function is(x, y) {\n    return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;\n  }\n  const objectIs = typeof Object.is === 'function' ? Object.is : is;\n  function areHookInputsEqual(nextDeps, prevDeps) {\n    if (!nextDeps || !prevDeps || prevDeps.length !== nextDeps.length) {\n      return false;\n    }\n    for (let i = 0; i < prevDeps.length; ++i) {\n      if (!objectIs(nextDeps[i], prevDeps[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return areHookInputsEqual(nextDeps, prevDeps);\n}\nexport function hasColorProps(updates) {\n  const colorPropsSet = new Set(colorProps);\n  for (const key in updates) {\n    if (colorPropsSet.has(key)) {\n      return true;\n    }\n  }\n  return false;\n}\nexport const parseColors = function () {\n  const _f = function (updates) {\n    for (const key in updates) {\n      if (colorProps.indexOf(key) !== -1) {\n        const processedColor = processColor(updates[key]);\n        if (processedColor !== undefined) {\n          updates[key] = processedColor;\n        }\n      }\n    }\n  };\n  _f._closure = {\n    colorProps,\n    processColor\n  };\n  _f.asString = \"function parseColors(updates){const{colorProps,processColor}=jsThis._closure;{for(const key in updates){if(colorProps.indexOf(key)!==-1){const processedColor=processColor(updates[key]);if(processedColor!==undefined){updates[key]=processedColor;}}}}}\";\n  _f.__workletHash = 3582645873562;\n  _f.__location = \"C:\\\\Users\\\\jsh4f\\\\OneDrive\\\\Documents\\\\GitHub\\\\UDL\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\utils.js (89:7)\";\n  return _f;\n}();\nexport function canApplyOptimalisation(upadterFn) {\n  const FUNCTIONLESS_FLAG = 0b00000001;\n  const STATEMENTLESS_FLAG = 0b00000010;\n  const optimalization = upadterFn.__optimalization;\n  return optimalization & FUNCTIONLESS_FLAG && optimalization & STATEMENTLESS_FLAG;\n}\nexport const isAnimated = function () {\n  const _f = function (prop) {\n    if (Array.isArray(prop)) {\n      return prop.some(isAnimated);\n    } else if (typeof prop === 'object') {\n      if (prop.onFrame !== undefined) {\n        return true;\n      } else {\n        return Object.values(prop).some(isAnimated);\n      }\n    }\n    return false;\n  };\n  _f._closure = {};\n  _f.asString = \"function isAnimated(prop){if(Array.isArray(prop)){return prop.some(isAnimated);}else if(typeof prop==='object'){if(prop.onFrame!==undefined){return true;}else{return Object.values(prop).some(isAnimated);}}return false;}\";\n  _f.__workletHash = 15109301349989;\n  _f.__location = \"C:\\\\Users\\\\jsh4f\\\\OneDrive\\\\Documents\\\\GitHub\\\\UDL\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\utils.js (109:7)\";\n  return _f;\n}();\nexport const styleDiff = function () {\n  const _f = function (oldStyle, newStyle) {\n    const diff = {};\n    for (const key in oldStyle) {\n      if (newStyle[key] === undefined) {\n        diff[key] = null;\n      }\n    }\n    for (const key in newStyle) {\n      const value = newStyle[key];\n      const oldValue = oldStyle[key];\n      if (isAnimated(value)) {\n        continue;\n      }\n      if (oldValue !== value) {\n        diff[key] = value;\n      }\n    }\n    return diff;\n  };\n  _f._closure = {\n    isAnimated\n  };\n  _f.asString = \"function styleDiff(oldStyle,newStyle){const{isAnimated}=jsThis._closure;{const diff={};for(const key in oldStyle){if(newStyle[key]===undefined){diff[key]=null;}}for(const key in newStyle){const value=newStyle[key];const oldValue=oldStyle[key];if(isAnimated(value)){continue;}if(oldValue!==value){diff[key]=value;}}return diff;}}\";\n  _f.__workletHash = 17473811638003;\n  _f.__location = \"C:\\\\Users\\\\jsh4f\\\\OneDrive\\\\Documents\\\\GitHub\\\\UDL\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\utils.js (124:7)\";\n  return _f;\n}();\nexport const getStyleWithoutAnimations = function () {\n  const _f = function (newStyle) {\n    const diff = {};\n    for (const key in newStyle) {\n      const value = newStyle[key];\n      if (isAnimated(value)) {\n        continue;\n      }\n      diff[key] = value;\n    }\n    return diff;\n  };\n  _f._closure = {\n    isAnimated\n  };\n  _f.asString = \"function getStyleWithoutAnimations(newStyle){const{isAnimated}=jsThis._closure;{const diff={};for(const key in newStyle){const value=newStyle[key];if(isAnimated(value)){continue;}diff[key]=value;}return diff;}}\";\n  _f.__workletHash = 2190466090064;\n  _f.__location = \"C:\\\\Users\\\\jsh4f\\\\OneDrive\\\\Documents\\\\GitHub\\\\UDL\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\utils.js (145:7)\";\n  return _f;\n}();\nexport const validateAnimatedStyles = function () {\n  const _f = function (styles) {\n    if (typeof styles !== 'object') {\n      throw new Error(`useAnimatedStyle has to return an object, found ${typeof styles} instead`);\n    } else if (Array.isArray(styles)) {\n      throw new Error('useAnimatedStyle has to return an object and cannot return static styles combined with dynamic ones. Please do merging where a component receives props.');\n    }\n  };\n  _f._closure = {};\n  _f.asString = \"function _f(styles){if(typeof styles!=='object'){throw new Error(\\\"useAnimatedStyle has to return an object, found \\\"+typeof styles+\\\" instead\\\");}else if(Array.isArray(styles)){throw new Error('useAnimatedStyle has to return an object and cannot return static styles combined with dynamic ones. Please do merging where a component receives props.');}}\";\n  _f.__workletHash = 316286613811;\n  _f.__location = \"C:\\\\Users\\\\jsh4f\\\\OneDrive\\\\Documents\\\\GitHub\\\\UDL\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\utils.js (157:38)\";\n  return _f;\n}();","map":{"version":3,"names":["useEffect","useRef","processColor","makeRemote","isWeb","isJest","colorProps","WorkletEventHandler","useEvent","handler","eventNames","rebuild","initRef","current","updateWorklet","useHandler","handlers","dependencies","context","savedDependencies","buildDependencies","doDependenciesDiffer","areDependenciesEqual","useWeb","buildWorkletsHash","Object","values","reduce","acc","worklet","__workletHash","toString","handlersList","filter","undefined","map","workletHash","closure","_closure","push","nextDeps","prevDeps","is","x","y","objectIs","areHookInputsEqual","length","i","hasColorProps","updates","colorPropsSet","Set","key","has","parseColors","_f","indexOf","processedColor","asString","__location","canApplyOptimalisation","upadterFn","FUNCTIONLESS_FLAG","STATEMENTLESS_FLAG","optimalization","__optimalization","isAnimated","prop","Array","isArray","some","onFrame","styleDiff","oldStyle","newStyle","diff","value","oldValue","getStyleWithoutAnimations","validateAnimatedStyles","styles","Error"],"sources":["C:/Users/jsh4f/OneDrive/Documents/GitHub/UDL/node_modules/react-native-reanimated/lib/reanimated2/hook/utils.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { processColor } from '../Colors';\nimport { makeRemote } from '../core';\nimport { isWeb, isJest } from '../PlatformChecker';\nimport { colorProps } from '../UpdateProps';\nimport WorkletEventHandler from '../WorkletEventHandler';\nexport function useEvent(handler, eventNames = [], rebuild = false) {\n    const initRef = useRef(null);\n    if (initRef.current === null) {\n        initRef.current = new WorkletEventHandler(handler, eventNames);\n    }\n    else if (rebuild) {\n        initRef.current.updateWorklet(handler);\n    }\n    return initRef;\n}\nexport function useHandler(handlers, dependencies) {\n    const initRef = useRef(null);\n    if (initRef.current === null) {\n        initRef.current = {\n            context: makeRemote({}),\n            savedDependencies: [],\n        };\n    }\n    useEffect(() => {\n        return () => {\n            initRef.current = null;\n        };\n    }, []);\n    const { context, savedDependencies } = initRef.current;\n    dependencies = buildDependencies(dependencies, handlers);\n    const doDependenciesDiffer = !areDependenciesEqual(dependencies, savedDependencies);\n    initRef.current.savedDependencies = dependencies;\n    const useWeb = isWeb() || isJest();\n    return { context, doDependenciesDiffer, useWeb };\n}\n// builds one big hash from multiple worklets' hashes\nexport function buildWorkletsHash(handlers) {\n    return Object.values(handlers).reduce((acc, worklet) => \n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    acc + worklet.__workletHash.toString(), '');\n}\n// builds dependencies array for gesture handlers\nexport function buildDependencies(dependencies, handlers) {\n    const handlersList = Object.values(handlers).filter((handler) => handler !== undefined);\n    if (!dependencies) {\n        dependencies = handlersList.map((handler) => {\n            return {\n                workletHash: handler.__workletHash,\n                closure: handler._closure,\n            };\n        });\n    }\n    else {\n        dependencies.push(buildWorkletsHash(handlersList));\n    }\n    return dependencies;\n}\n// this is supposed to work as useEffect comparison\nexport function areDependenciesEqual(nextDeps, prevDeps) {\n    function is(x, y) {\n        /* eslint-disable no-self-compare */\n        return (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y);\n        /* eslint-enable no-self-compare */\n    }\n    const objectIs = typeof Object.is === 'function' ? Object.is : is;\n    function areHookInputsEqual(nextDeps, prevDeps) {\n        if (!nextDeps || !prevDeps || prevDeps.length !== nextDeps.length) {\n            return false;\n        }\n        for (let i = 0; i < prevDeps.length; ++i) {\n            if (!objectIs(nextDeps[i], prevDeps[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return areHookInputsEqual(nextDeps, prevDeps);\n}\nexport function hasColorProps(updates) {\n    const colorPropsSet = new Set(colorProps);\n    for (const key in updates) {\n        if (colorPropsSet.has(key)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function parseColors(updates) {\n    'worklet';\n    for (const key in updates) {\n        if (colorProps.indexOf(key) !== -1) {\n            // value could be an animation in which case processColor will recognize it and will return undefined\n            // -> in such a case we don't want to override style of that key\n            const processedColor = processColor(updates[key]);\n            if (processedColor !== undefined) {\n                updates[key] = processedColor;\n            }\n        }\n    }\n}\nexport function canApplyOptimalisation(upadterFn) {\n    const FUNCTIONLESS_FLAG = 0b00000001;\n    const STATEMENTLESS_FLAG = 0b00000010;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const optimalization = upadterFn.__optimalization;\n    return (optimalization & FUNCTIONLESS_FLAG && optimalization & STATEMENTLESS_FLAG);\n}\nexport function isAnimated(prop) {\n    'worklet';\n    if (Array.isArray(prop)) {\n        return prop.some(isAnimated);\n    }\n    else if (typeof prop === 'object') {\n        if (prop.onFrame !== undefined) {\n            return true;\n        }\n        else {\n            return Object.values(prop).some(isAnimated);\n        }\n    }\n    return false;\n}\nexport function styleDiff(oldStyle, newStyle) {\n    'worklet';\n    const diff = {};\n    for (const key in oldStyle) {\n        if (newStyle[key] === undefined) {\n            diff[key] = null;\n        }\n    }\n    for (const key in newStyle) {\n        const value = newStyle[key];\n        const oldValue = oldStyle[key];\n        if (isAnimated(value)) {\n            // do nothing\n            continue;\n        }\n        if (oldValue !== value) {\n            diff[key] = value;\n        }\n    }\n    return diff;\n}\nexport function getStyleWithoutAnimations(newStyle) {\n    'worklet';\n    const diff = {};\n    for (const key in newStyle) {\n        const value = newStyle[key];\n        if (isAnimated(value)) {\n            continue;\n        }\n        diff[key] = value;\n    }\n    return diff;\n}\nexport const validateAnimatedStyles = (styles) => {\n    'worklet';\n    if (typeof styles !== 'object') {\n        throw new Error(`useAnimatedStyle has to return an object, found ${typeof styles} instead`);\n    }\n    else if (Array.isArray(styles)) {\n        throw new Error('useAnimatedStyle has to return an object and cannot return static styles combined with dynamic ones. Please do merging where a component receives props.');\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}