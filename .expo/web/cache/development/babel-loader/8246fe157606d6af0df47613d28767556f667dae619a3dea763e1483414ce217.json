{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"enabled\"];\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { State } from '../../State';\nimport { DEFAULT_TOUCH_SLOP } from '../constants';\nimport GestureHandler from './GestureHandler';\nexport default class NativeViewGestureHandler extends GestureHandler {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"buttonRole\", void 0);\n    _defineProperty(this, \"shouldActivateOnStart\", false);\n    _defineProperty(this, \"disallowInterruption\", false);\n    _defineProperty(this, \"startX\", 0);\n    _defineProperty(this, \"startY\", 0);\n    _defineProperty(this, \"minDistSq\", DEFAULT_TOUCH_SLOP * DEFAULT_TOUCH_SLOP);\n  }\n  init(ref, propsRef) {\n    super.init(ref, propsRef);\n    this.setShouldCancelWhenOutside(true);\n    this.view.style['touchAction'] = 'auto';\n    this.view.style['WebkitTouchCallout'] = 'auto';\n    if (this.view.hasAttribute('role')) {\n      this.buttonRole = true;\n    } else {\n      this.buttonRole = false;\n    }\n  }\n  updateGestureConfig(_ref) {\n    let {\n        enabled = true\n      } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n    super.updateGestureConfig(Object.assign({\n      enabled: enabled\n    }, props));\n    if (this.config.shouldActivateOnStart !== undefined) {\n      this.shouldActivateOnStart = this.config.shouldActivateOnStart;\n    }\n    if (this.config.disallowInterruption !== undefined) {\n      this.disallowInterruption = this.config.disallowInterruption;\n    }\n  }\n  resetConfig() {\n    super.resetConfig();\n  }\n  onPointerDown(event) {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n    this.newPointerAction();\n  }\n  onPointerAdd(event) {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.newPointerAction();\n  }\n  newPointerAction() {\n    this.startX = this.tracker.getLastAvgX();\n    this.startY = this.tracker.getLastAvgY();\n    if (this.currentState !== State.UNDETERMINED) {\n      return;\n    }\n    this.begin();\n    if (this.buttonRole) {\n      this.activate();\n    }\n  }\n  onPointerMove(event) {\n    this.tracker.track(event);\n    const dx = this.startX - this.tracker.getLastAvgX();\n    const dy = this.startY - this.tracker.getLastAvgY();\n    const distSq = dx * dx + dy * dy;\n    if (distSq >= this.minDistSq) {\n      if (this.buttonRole && this.currentState === State.ACTIVE) {\n        this.cancel();\n      } else if (!this.buttonRole && this.currentState === State.BEGAN) {\n        this.activate();\n      }\n    }\n  }\n  onPointerOut() {\n    if (this.currentState === State.BEGAN || this.currentState === State.ACTIVE) {\n      this.cancel();\n    }\n  }\n  onPointerUp(event) {\n    super.onPointerUp(event);\n    this.onUp(event);\n  }\n  onPointerRemove(event) {\n    super.onPointerRemove(event);\n    this.onUp(event);\n  }\n  onUp(event) {\n    this.tracker.removeFromTracker(event.pointerId);\n    if (this.tracker.getTrackedPointersCount() === 0) {\n      if (this.currentState === State.ACTIVE) {\n        this.end();\n      } else {\n        this.fail();\n      }\n    }\n  }\n  shouldRecognizeSimultaneously(handler) {\n    if (super.shouldRecognizeSimultaneously(handler)) {\n      return true;\n    }\n    if (handler instanceof NativeViewGestureHandler && handler.getState() === State.ACTIVE && handler.disallowsInterruption()) {\n      return false;\n    }\n    const canBeInterrupted = !this.disallowInterruption;\n    if (this.currentState === State.ACTIVE && handler.getState() === State.ACTIVE && canBeInterrupted) {\n      return false;\n    }\n    return this.currentState === State.ACTIVE && canBeInterrupted && handler.getTag() > 0;\n  }\n  shouldBeCancelledByOther(_handler) {\n    return !this.disallowInterruption;\n  }\n  disallowsInterruption() {\n    return this.disallowInterruption;\n  }\n}","map":{"version":3,"names":["State","DEFAULT_TOUCH_SLOP","GestureHandler","NativeViewGestureHandler","constructor","args","_defineProperty","init","ref","propsRef","setShouldCancelWhenOutside","view","style","hasAttribute","buttonRole","updateGestureConfig","_ref","enabled","props","_objectWithoutPropertiesLoose","_excluded","Object","assign","config","shouldActivateOnStart","undefined","disallowInterruption","resetConfig","onPointerDown","event","tracker","addToTracker","newPointerAction","onPointerAdd","startX","getLastAvgX","startY","getLastAvgY","currentState","UNDETERMINED","begin","activate","onPointerMove","track","dx","dy","distSq","minDistSq","ACTIVE","cancel","BEGAN","onPointerOut","onPointerUp","onUp","onPointerRemove","removeFromTracker","pointerId","getTrackedPointersCount","end","fail","shouldRecognizeSimultaneously","handler","getState","disallowsInterruption","canBeInterrupted","getTag","shouldBeCancelledByOther","_handler"],"sources":["C:\\Users\\jsh4f\\OneDrive\\Documents\\GitHub\\UDL\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\handlers\\NativeViewGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { DEFAULT_TOUCH_SLOP } from '../constants';\nimport { AdaptedEvent, Config } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nexport default class NativeViewGestureHandler extends GestureHandler {\n  private buttonRole!: boolean;\n\n  //TODO: Implement logic for activation on start\n  //@ts-ignore Logic yet to be implemented\n  private shouldActivateOnStart = false;\n  private disallowInterruption = false;\n\n  private startX = 0;\n  private startY = 0;\n  private minDistSq = DEFAULT_TOUCH_SLOP * DEFAULT_TOUCH_SLOP;\n\n  public init(ref: number, propsRef: React.RefObject<unknown>): void {\n    super.init(ref, propsRef);\n\n    this.setShouldCancelWhenOutside(true);\n\n    this.view.style['touchAction'] = 'auto';\n\n    //@ts-ignore Turns on defualt touch behavior on Safari\n    this.view.style['WebkitTouchCallout'] = 'auto';\n\n    if (this.view.hasAttribute('role')) {\n      this.buttonRole = true;\n    } else {\n      this.buttonRole = false;\n    }\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    if (this.config.shouldActivateOnStart !== undefined) {\n      this.shouldActivateOnStart = this.config.shouldActivateOnStart;\n    }\n    if (this.config.disallowInterruption !== undefined) {\n      this.disallowInterruption = this.config.disallowInterruption;\n    }\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n    this.newPointerAction();\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.newPointerAction();\n  }\n\n  private newPointerAction(): void {\n    this.startX = this.tracker.getLastAvgX();\n    this.startY = this.tracker.getLastAvgY();\n\n    if (this.currentState !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.begin();\n    if (this.buttonRole) {\n      this.activate();\n    }\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tracker.track(event);\n\n    const dx = this.startX - this.tracker.getLastAvgX();\n    const dy = this.startY - this.tracker.getLastAvgY();\n    const distSq = dx * dx + dy * dy;\n\n    if (distSq >= this.minDistSq) {\n      if (this.buttonRole && this.currentState === State.ACTIVE) {\n        this.cancel();\n      } else if (!this.buttonRole && this.currentState === State.BEGAN) {\n        this.activate();\n      }\n    }\n  }\n\n  protected onPointerOut(): void {\n    if (\n      this.currentState === State.BEGAN ||\n      this.currentState === State.ACTIVE\n    ) {\n      this.cancel();\n    }\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.onUp(event);\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.onUp(event);\n  }\n\n  private onUp(event: AdaptedEvent): void {\n    this.tracker.removeFromTracker(event.pointerId);\n\n    if (this.tracker.getTrackedPointersCount() === 0) {\n      if (this.currentState === State.ACTIVE) {\n        this.end();\n      } else {\n        this.fail();\n      }\n    }\n  }\n\n  public shouldRecognizeSimultaneously(handler: GestureHandler): boolean {\n    if (super.shouldRecognizeSimultaneously(handler)) {\n      return true;\n    }\n\n    if (\n      handler instanceof NativeViewGestureHandler &&\n      handler.getState() === State.ACTIVE &&\n      handler.disallowsInterruption()\n    ) {\n      return false;\n    }\n\n    const canBeInterrupted = !this.disallowInterruption;\n\n    if (\n      this.currentState === State.ACTIVE &&\n      handler.getState() === State.ACTIVE &&\n      canBeInterrupted\n    ) {\n      return false;\n    }\n\n    return (\n      this.currentState === State.ACTIVE &&\n      canBeInterrupted &&\n      handler.getTag() > 0\n    );\n  }\n\n  public shouldBeCancelledByOther(_handler: GestureHandler): boolean {\n    return !this.disallowInterruption;\n  }\n\n  public disallowsInterruption(): boolean {\n    return this.disallowInterruption;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}