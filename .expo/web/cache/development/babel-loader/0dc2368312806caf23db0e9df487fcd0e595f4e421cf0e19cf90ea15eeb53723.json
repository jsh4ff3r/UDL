{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jsh4f\\\\OneDrive\\\\Documents\\\\GitHub\\\\UDL\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\createAnimatedComponent.js\";\nimport React from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ReanimatedEventEmitter from './ReanimatedEventEmitter';\nimport AnimatedEvent from './reanimated1/core/AnimatedEvent';\nimport AnimatedNode from './reanimated1/core/AnimatedNode';\nimport AnimatedValue from './reanimated1/core/AnimatedValue';\nimport { createOrReusePropsNode } from './reanimated1/core/AnimatedProps';\nimport WorkletEventHandler from './reanimated2/WorkletEventHandler';\nimport setAndForwardRef from './setAndForwardRef';\nimport './reanimated2/layoutReanimation/LayoutAnimationRepository';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from './ConfigHelper';\nimport { RNRenderer } from './reanimated2/platform-specific/RNRenderer';\nimport { makeMutable, runOnUI, enableLayoutAnimations } from './reanimated2/core';\nimport { DefaultEntering, DefaultExiting, DefaultLayout } from './reanimated2/layoutReanimation/defaultAnimations/Default';\nimport { isJest, isChromeDebugger, shouldBeUseWeb } from './reanimated2/PlatformChecker';\nimport { initialUpdaterRun } from './reanimated2/animation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NODE_MAPPING = new Map();\nfunction listener(data) {\n  const component = NODE_MAPPING.get(data.viewTag);\n  component && component._updateFromNative(data.props);\n}\nfunction dummyListener() {}\nfunction hasAnimatedNodes(value) {\n  if (value instanceof AnimatedNode) {\n    return true;\n  }\n  if (Array.isArray(value)) {\n    return value.some(item => hasAnimatedNodes(item));\n  }\n  if (value && typeof value === 'object') {\n    return Object.keys(value).some(key => hasAnimatedNodes(value[key]));\n  }\n  return false;\n}\nfunction flattenArray(array) {\n  if (!Array.isArray(array)) {\n    return [array];\n  }\n  const resultArr = [];\n  const _flattenArray = arr => {\n    arr.forEach(item => {\n      if (Array.isArray(item)) {\n        _flattenArray(item);\n      } else {\n        resultArr.push(item);\n      }\n    });\n  };\n  _flattenArray(array);\n  return resultArr;\n}\nfunction onlyAnimatedStyles(styles) {\n  return styles.filter(style => style === null || style === void 0 ? void 0 : style.viewDescriptors);\n}\nfunction isSameAnimatedStyle(style1, style2) {\n  return (style1 === null || style1 === void 0 ? void 0 : style1.viewsRef) === (style2 === null || style2 === void 0 ? void 0 : style2.viewsRef);\n}\nconst isSameAnimatedProps = isSameAnimatedStyle;\nconst has = (key, x) => {\n  if (typeof x === 'function' || typeof x === 'object') {\n    if (x === null || x === undefined) {\n      return false;\n    } else {\n      return key in x;\n    }\n  }\n  return false;\n};\nexport default function createAnimatedComponent(Component, options) {\n  invariant(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, '`createAnimatedComponent` does not support stateless functional components; ' + 'use a class component instead.');\n  class AnimatedComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this._invokeAnimatedPropsCallbackOnMount = false;\n      this._styles = null;\n      this._viewTag = -1;\n      this._isFirstRender = true;\n      this.animatedStyle = {\n        value: {}\n      };\n      this.initialStyle = {};\n      this._component = null;\n      this._animatedPropsCallback = () => {\n        if (this._component == null) {\n          this._invokeAnimatedPropsCallbackOnMount = true;\n        } else if (typeof this._component.setNativeProps !== 'function') {\n          this.forceUpdate();\n        } else {\n          this._component.setNativeProps(this._propsAnimated.__getValue());\n        }\n      };\n      this._setComponentRef = setAndForwardRef({\n        getForwardedRef: () => this.props.forwardedRef,\n        setLocalRef: ref => {\n          const tag = findNodeHandle(ref);\n          if (!shouldBeUseWeb() && (this.props.layout || this.props.entering || this.props.exiting) && tag != null) {\n            enableLayoutAnimations(true, false);\n            let layout = this.props.layout ? this.props.layout : DefaultLayout;\n            let entering = this.props.entering ? this.props.entering : DefaultEntering;\n            let exiting = this.props.exiting ? this.props.exiting : DefaultExiting;\n            if (has('build', layout)) {\n              layout = layout.build();\n            }\n            if (has('build', entering)) {\n              entering = entering.build();\n            }\n            if (has('build', exiting)) {\n              exiting = exiting.build();\n            }\n            const config = {\n              layout,\n              entering,\n              exiting,\n              sv: this.sv\n            };\n            runOnUI(function () {\n              const _f = function () {\n                global.LayoutAnimationRepository.registerConfig(tag, config);\n              };\n              _f._closure = {\n                tag,\n                config\n              };\n              _f.asString = \"function _f(){const{tag,config}=jsThis._closure;{global.LayoutAnimationRepository.registerConfig(tag,config);}}\";\n              _f.__workletHash = 5455589887771;\n              _f.__location = \"C:\\\\Users\\\\jsh4f\\\\OneDrive\\\\Documents\\\\GitHub\\\\UDL\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\createAnimatedComponent.js (148:32)\";\n              return _f;\n            }())();\n          }\n          if (ref !== this._component) {\n            this._component = ref;\n          }\n        }\n      });\n      this._attachProps(this.props);\n      if (isJest()) {\n        this.animatedStyle = {\n          value: {}\n        };\n      }\n      this.sv = makeMutable({});\n    }\n    componentWillUnmount() {\n      this._detachPropUpdater();\n      this._propsAnimated && this._propsAnimated.__detach();\n      this._detachNativeEvents();\n      this._detachStyles();\n      this.sv = null;\n    }\n    componentDidMount() {\n      if (this._invokeAnimatedPropsCallbackOnMount) {\n        this._invokeAnimatedPropsCallbackOnMount = false;\n        this._animatedPropsCallback();\n      }\n      this._propsAnimated && this._propsAnimated.setNativeView(this._component);\n      this._attachNativeEvents();\n      this._attachPropUpdater();\n      this._attachAnimatedStyles();\n    }\n    _getEventViewRef() {\n      var _a;\n      return ((_a = this._component) === null || _a === void 0 ? void 0 : _a.getScrollableNode) ? this._component.getScrollableNode() : this._component;\n    }\n    _attachNativeEvents() {\n      const node = this._getEventViewRef();\n      let viewTag = findNodeHandle((options === null || options === void 0 ? void 0 : options.setNativeProps) ? this : node);\n      const componentName = Component.displayName || Component.name;\n      if ((componentName === null || componentName === void 0 ? void 0 : componentName.endsWith('FlashList')) && this._component) {\n        viewTag = findNodeHandle(this._component.getScrollableNode());\n      }\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (prop instanceof AnimatedEvent) {\n          prop.attachEvent(node, key);\n        } else if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n          prop.current.registerForEvents(viewTag, key);\n        }\n      }\n    }\n    _detachNativeEvents() {\n      const node = this._getEventViewRef();\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (prop instanceof AnimatedEvent) {\n          prop.detachEvent(node, key);\n        } else if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n    }\n    _detachStyles() {\n      var _a;\n      if (Platform.OS === 'web' && this._styles !== null) {\n        for (const style of this._styles) {\n          if (style === null || style === void 0 ? void 0 : style.viewsRef) {\n            style.viewsRef.remove(this);\n          }\n        }\n      } else if (this._viewTag !== -1 && this._styles !== null) {\n        for (const style of this._styles) {\n          style.viewDescriptors.remove(this._viewTag);\n        }\n        if ((_a = this.props.animatedProps) === null || _a === void 0 ? void 0 : _a.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n        }\n      }\n    }\n    _reattachNativeEvents(prevProps) {\n      const node = this._getEventViewRef();\n      const attached = new Set();\n      const nextEvts = new Set();\n      let viewTag;\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (prop instanceof AnimatedEvent) {\n          nextEvts.add(prop.__nodeID);\n        } else if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n          if (viewTag === undefined) {\n            viewTag = prop.current.viewTag;\n          }\n        }\n      }\n      for (const key in prevProps) {\n        const prop = this.props[key];\n        if (prop instanceof AnimatedEvent) {\n          if (!nextEvts.has(prop.__nodeID)) {\n            prop.detachEvent(node, key);\n          } else {\n            attached.add(prop.__nodeID);\n          }\n        } else if (has('current', prop) && prop.current instanceof WorkletEventHandler && prop.current.reattachNeeded) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (prop instanceof AnimatedEvent && !attached.has(prop.__nodeID)) {\n          prop.attachEvent(node, key);\n        } else if (has('current', prop) && prop.current instanceof WorkletEventHandler && prop.current.reattachNeeded) {\n          prop.current.registerForEvents(viewTag, key);\n          prop.current.reattachNeeded = false;\n        }\n      }\n    }\n    _attachProps(nextProps) {\n      const oldPropsAnimated = this._propsAnimated;\n      this._propsAnimated = createOrReusePropsNode(nextProps, this._animatedPropsCallback, oldPropsAnimated);\n      if (oldPropsAnimated !== this._propsAnimated) {\n        oldPropsAnimated && oldPropsAnimated.__detach();\n      }\n    }\n    _updateFromNative(props) {\n      var _a, _b;\n      if (options === null || options === void 0 ? void 0 : options.setNativeProps) {\n        options.setNativeProps(this._component, props);\n      } else {\n        (_b = (_a = this._component) === null || _a === void 0 ? void 0 : _a.setNativeProps) === null || _b === void 0 ? void 0 : _b.call(_a, props);\n      }\n    }\n    _attachPropUpdater() {\n      const viewTag = findNodeHandle(this);\n      NODE_MAPPING.set(viewTag, this);\n      if (NODE_MAPPING.size === 1) {\n        ReanimatedEventEmitter.addListener('onReanimatedPropsChange', listener);\n      }\n    }\n    _attachAnimatedStyles() {\n      var _a, _b, _c;\n      const styles = this.props.style ? onlyAnimatedStyles(flattenArray(this.props.style)) : [];\n      const prevStyles = this._styles;\n      this._styles = styles;\n      const prevAnimatedProps = this._animatedProps;\n      this._animatedProps = this.props.animatedProps;\n      let viewTag;\n      let viewName;\n      if (Platform.OS === 'web') {\n        viewTag = findNodeHandle(this);\n        viewName = null;\n      } else {\n        const hostInstance = RNRenderer.findHostInstance_DEPRECATED(this);\n        if (!hostInstance) {\n          throw new Error('Cannot find host instance for this component. Maybe it renders nothing?');\n        }\n        viewTag = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance._nativeTag;\n        viewName = (_a = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig) === null || _a === void 0 ? void 0 : _a.uiViewClassName;\n        const hasReanimated2Props = ((_b = this.props.animatedProps) === null || _b === void 0 ? void 0 : _b.viewDescriptors) || styles.length;\n        if (hasReanimated2Props && (hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig)) {\n          adaptViewConfig(hostInstance.viewConfig);\n        }\n      }\n      this._viewTag = viewTag;\n      if (prevStyles) {\n        const hasOneSameStyle = styles.length === 1 && prevStyles.length === 1 && isSameAnimatedStyle(styles[0], prevStyles[0]);\n        if (!hasOneSameStyle) {\n          for (const prevStyle of prevStyles) {\n            const isPresent = styles.some(style => isSameAnimatedStyle(style, prevStyle));\n            if (!isPresent) {\n              prevStyle.viewDescriptors.remove(viewTag);\n            }\n          }\n        }\n      }\n      styles.forEach(style => {\n        style.viewDescriptors.add({\n          tag: viewTag,\n          name: viewName\n        });\n        if (isJest()) {\n          this.animatedStyle.value = Object.assign(Object.assign({}, this.animatedStyle.value), style.initial.value);\n          style.animatedStyle.current = this.animatedStyle;\n        }\n      });\n      if (prevAnimatedProps && !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)) {\n        prevAnimatedProps.viewDescriptors.remove(viewTag);\n      }\n      if ((_c = this.props.animatedProps) === null || _c === void 0 ? void 0 : _c.viewDescriptors) {\n        this.props.animatedProps.viewDescriptors.add({\n          tag: viewTag,\n          name: viewName\n        });\n      }\n    }\n    _detachPropUpdater() {\n      const viewTag = findNodeHandle(this);\n      NODE_MAPPING.delete(viewTag);\n      if (NODE_MAPPING.size === 0) {\n        ReanimatedEventEmitter.removeAllListeners('onReanimatedPropsChange');\n      }\n    }\n    componentDidUpdate(prevProps) {\n      this._attachProps(this.props);\n      this._reattachNativeEvents(prevProps);\n      this._propsAnimated && this._propsAnimated.setNativeView(this._component);\n      this._attachAnimatedStyles();\n    }\n    _filterNonAnimatedStyle(inputStyle) {\n      const style = {};\n      for (const key in inputStyle) {\n        const value = inputStyle[key];\n        if (!hasAnimatedNodes(value)) {\n          style[key] = value;\n        } else if (value instanceof AnimatedValue) {\n          style[key] = value._startingValue;\n        }\n      }\n      return style;\n    }\n    _filterNonAnimatedProps(inputProps) {\n      const props = {};\n      for (const key in inputProps) {\n        const value = inputProps[key];\n        if (key === 'style') {\n          const styleProp = inputProps.style;\n          const styles = flattenArray(styleProp !== null && styleProp !== void 0 ? styleProp : []);\n          const processedStyle = styles.map(style => {\n            if (style && style.viewDescriptors) {\n              style.viewsRef.add(this);\n              if (this._isFirstRender) {\n                this.initialStyle = Object.assign(Object.assign({}, style.initial.value), initialUpdaterRun(style.initial.updater));\n              }\n              return this.initialStyle;\n            } else {\n              return style;\n            }\n          });\n          props[key] = this._filterNonAnimatedStyle(StyleSheet.flatten(processedStyle));\n        } else if (key === 'animatedProps') {\n          const animatedProp = inputProps.animatedProps;\n          if (animatedProp.initial !== undefined) {\n            Object.keys(animatedProp.initial.value).forEach(key => {\n              var _a, _b;\n              props[key] = (_a = animatedProp.initial) === null || _a === void 0 ? void 0 : _a.value[key];\n              (_b = animatedProp.viewsRef) === null || _b === void 0 ? void 0 : _b.add(this);\n            });\n          }\n        } else if (value instanceof AnimatedEvent) {\n          props[key] = dummyListener;\n        } else if (has('current', value) && value.current instanceof WorkletEventHandler) {\n          if (value.current.eventNames.length > 0) {\n            value.current.eventNames.forEach(eventName => {\n              props[eventName] = has('listeners', value.current) ? value.current.listeners[eventName] : dummyListener;\n            });\n          } else {\n            props[key] = dummyListener;\n          }\n        } else if (!(value instanceof AnimatedNode)) {\n          if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\n            props[key] = value;\n          }\n        } else if (value instanceof AnimatedValue) {\n          props[key] = value._startingValue;\n        }\n      }\n      return props;\n    }\n    render() {\n      const props = this._filterNonAnimatedProps(this.props);\n      if (isJest()) {\n        props.animatedStyle = this.animatedStyle;\n      }\n      if (this._isFirstRender) {\n        this._isFirstRender = false;\n      }\n      const platformProps = Platform.select({\n        web: {},\n        default: {\n          collapsable: false\n        }\n      });\n      return _jsxDEV(Component, Object.assign({}, props, {\n        ref: this._setComponentRef\n      }, platformProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 21\n      }, this);\n    }\n  }\n  AnimatedComponent.displayName = `AnimatedComponent(${Component.displayName || Component.name || 'Component'})`;\n  return React.forwardRef((props, ref) => {\n    return _jsxDEV(AnimatedComponent, Object.assign({}, props, ref === null ? null : {\n      forwardedRef: ref\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 17\n    }, this);\n  });\n}","map":{"version":3,"names":["React","findNodeHandle","Platform","StyleSheet","ReanimatedEventEmitter","AnimatedEvent","AnimatedNode","AnimatedValue","createOrReusePropsNode","WorkletEventHandler","setAndForwardRef","invariant","adaptViewConfig","RNRenderer","makeMutable","runOnUI","enableLayoutAnimations","DefaultEntering","DefaultExiting","DefaultLayout","isJest","isChromeDebugger","shouldBeUseWeb","initialUpdaterRun","jsxDEV","_jsxDEV","NODE_MAPPING","Map","listener","data","component","get","viewTag","_updateFromNative","props","dummyListener","hasAnimatedNodes","value","Array","isArray","some","item","Object","keys","key","flattenArray","array","resultArr","_flattenArray","arr","forEach","push","onlyAnimatedStyles","styles","filter","style","viewDescriptors","isSameAnimatedStyle","style1","style2","viewsRef","isSameAnimatedProps","has","x","undefined","createAnimatedComponent","Component","options","prototype","isReactComponent","AnimatedComponent","constructor","_invokeAnimatedPropsCallbackOnMount","_styles","_viewTag","_isFirstRender","animatedStyle","initialStyle","_component","_animatedPropsCallback","setNativeProps","forceUpdate","_propsAnimated","__getValue","_setComponentRef","getForwardedRef","forwardedRef","setLocalRef","ref","tag","layout","entering","exiting","build","config","sv","_f","global","LayoutAnimationRepository","registerConfig","_closure","asString","__workletHash","__location","_attachProps","componentWillUnmount","_detachPropUpdater","__detach","_detachNativeEvents","_detachStyles","componentDidMount","setNativeView","_attachNativeEvents","_attachPropUpdater","_attachAnimatedStyles","_getEventViewRef","_a","getScrollableNode","node","componentName","displayName","name","endsWith","prop","attachEvent","current","registerForEvents","detachEvent","unregisterFromEvents","OS","remove","animatedProps","_reattachNativeEvents","prevProps","attached","Set","nextEvts","add","__nodeID","reattachNeeded","nextProps","oldPropsAnimated","_b","call","set","size","addListener","_c","prevStyles","prevAnimatedProps","_animatedProps","viewName","hostInstance","findHostInstance_DEPRECATED","Error","_nativeTag","viewConfig","uiViewClassName","hasReanimated2Props","length","hasOneSameStyle","prevStyle","isPresent","assign","initial","delete","removeAllListeners","componentDidUpdate","_filterNonAnimatedStyle","inputStyle","_startingValue","_filterNonAnimatedProps","inputProps","styleProp","processedStyle","map","updater","flatten","animatedProp","eventNames","eventName","listeners","render","platformProps","select","web","default","collapsable","fileName","_jsxFileName","lineNumber","columnNumber","forwardRef"],"sources":["C:/Users/jsh4f/OneDrive/Documents/GitHub/UDL/node_modules/react-native-reanimated/lib/createAnimatedComponent.js"],"sourcesContent":["import React from 'react';\nimport { findNodeHandle, Platform, StyleSheet } from 'react-native';\nimport ReanimatedEventEmitter from './ReanimatedEventEmitter';\n// @ts-ignore JS file\nimport AnimatedEvent from './reanimated1/core/AnimatedEvent';\n// @ts-ignore JS file\nimport AnimatedNode from './reanimated1/core/AnimatedNode';\n// @ts-ignore JS file\nimport AnimatedValue from './reanimated1/core/AnimatedValue';\n// @ts-ignore JS file\nimport { createOrReusePropsNode } from './reanimated1/core/AnimatedProps';\nimport WorkletEventHandler from './reanimated2/WorkletEventHandler';\nimport setAndForwardRef from './setAndForwardRef';\nimport './reanimated2/layoutReanimation/LayoutAnimationRepository';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from './ConfigHelper';\nimport { RNRenderer } from './reanimated2/platform-specific/RNRenderer';\nimport { makeMutable, runOnUI, enableLayoutAnimations, } from './reanimated2/core';\nimport { DefaultEntering, DefaultExiting, DefaultLayout, } from './reanimated2/layoutReanimation/defaultAnimations/Default';\nimport { isJest, isChromeDebugger, shouldBeUseWeb, } from './reanimated2/PlatformChecker';\nimport { initialUpdaterRun } from './reanimated2/animation';\nconst NODE_MAPPING = new Map();\nfunction listener(data) {\n    const component = NODE_MAPPING.get(data.viewTag);\n    component && component._updateFromNative(data.props);\n}\nfunction dummyListener() {\n    // empty listener we use to assign to listener properties for which animated\n    // event is used.\n}\nfunction hasAnimatedNodes(value) {\n    if (value instanceof AnimatedNode) {\n        return true;\n    }\n    if (Array.isArray(value)) {\n        return value.some((item) => hasAnimatedNodes(item));\n    }\n    if (value && typeof value === 'object') {\n        return Object.keys(value).some((key) => hasAnimatedNodes(value[key]));\n    }\n    return false;\n}\nfunction flattenArray(array) {\n    if (!Array.isArray(array)) {\n        return [array];\n    }\n    const resultArr = [];\n    const _flattenArray = (arr) => {\n        arr.forEach((item) => {\n            if (Array.isArray(item)) {\n                _flattenArray(item);\n            }\n            else {\n                resultArr.push(item);\n            }\n        });\n    };\n    _flattenArray(array);\n    return resultArr;\n}\nfunction onlyAnimatedStyles(styles) {\n    return styles.filter((style) => style === null || style === void 0 ? void 0 : style.viewDescriptors);\n}\nfunction isSameAnimatedStyle(style1, style2) {\n    // We cannot use equality check to compare useAnimatedStyle outputs directly.\n    // Instead, we can compare its viewsRefs.\n    return (style1 === null || style1 === void 0 ? void 0 : style1.viewsRef) === (style2 === null || style2 === void 0 ? void 0 : style2.viewsRef);\n}\nconst isSameAnimatedProps = isSameAnimatedStyle;\nconst has = (key, x) => {\n    if (typeof x === 'function' || typeof x === 'object') {\n        if (x === null || x === undefined) {\n            return false;\n        }\n        else {\n            return key in x;\n        }\n    }\n    return false;\n};\nexport default function createAnimatedComponent(Component, options) {\n    invariant(typeof Component !== 'function' ||\n        (Component.prototype && Component.prototype.isReactComponent), '`createAnimatedComponent` does not support stateless functional components; ' +\n        'use a class component instead.');\n    class AnimatedComponent extends React.Component {\n        constructor(props) {\n            super(props);\n            this._invokeAnimatedPropsCallbackOnMount = false;\n            this._styles = null;\n            this._viewTag = -1;\n            this._isFirstRender = true;\n            this.animatedStyle = { value: {} };\n            this.initialStyle = {};\n            this._component = null;\n            // The system is best designed when setNativeProps is implemented. It is\n            // able to avoid re-rendering and directly set the attributes that changed.\n            // However, setNativeProps can only be implemented on native components\n            // If you want to animate a composite component, you need to re-render it.\n            // In this case, we have a fallback that uses forceUpdate.\n            this._animatedPropsCallback = () => {\n                if (this._component == null) {\n                    // AnimatedProps is created in will-mount because it's used in render.\n                    // But this callback may be invoked before mount in async mode,\n                    // In which case we should defer the setNativeProps() call.\n                    // React may throw away uncommitted work in async mode,\n                    // So a deferred call won't always be invoked.\n                    this._invokeAnimatedPropsCallbackOnMount = true;\n                }\n                else if (typeof this._component.setNativeProps !== 'function') {\n                    this.forceUpdate();\n                }\n                else {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    this._component.setNativeProps(this._propsAnimated.__getValue());\n                }\n            };\n            this._setComponentRef = setAndForwardRef({\n                getForwardedRef: () => this.props.forwardedRef,\n                setLocalRef: (ref) => {\n                    // TODO update config\n                    const tag = findNodeHandle(ref);\n                    if (!shouldBeUseWeb() &&\n                        (this.props.layout || this.props.entering || this.props.exiting) &&\n                        tag != null) {\n                        enableLayoutAnimations(true, false);\n                        let layout = this.props.layout ? this.props.layout : DefaultLayout;\n                        let entering = this.props.entering\n                            ? this.props.entering\n                            : DefaultEntering;\n                        let exiting = this.props.exiting\n                            ? this.props.exiting\n                            : DefaultExiting;\n                        if (has('build', layout)) {\n                            layout = layout.build();\n                        }\n                        if (has('build', entering)) {\n                            entering = entering.build();\n                        }\n                        if (has('build', exiting)) {\n                            exiting = exiting.build();\n                        }\n                        const config = {\n                            layout,\n                            entering,\n                            exiting,\n                            sv: this.sv,\n                        };\n                        runOnUI(() => {\n                            'worklet';\n                            global.LayoutAnimationRepository.registerConfig(tag, config);\n                        })();\n                    }\n                    if (ref !== this._component) {\n                        this._component = ref;\n                    }\n                },\n            });\n            this._attachProps(this.props);\n            if (isJest()) {\n                this.animatedStyle = { value: {} };\n            }\n            this.sv = makeMutable({});\n        }\n        componentWillUnmount() {\n            this._detachPropUpdater();\n            this._propsAnimated && this._propsAnimated.__detach();\n            this._detachNativeEvents();\n            this._detachStyles();\n            this.sv = null;\n        }\n        componentDidMount() {\n            if (this._invokeAnimatedPropsCallbackOnMount) {\n                this._invokeAnimatedPropsCallbackOnMount = false;\n                this._animatedPropsCallback();\n            }\n            this._propsAnimated &&\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                this._propsAnimated.setNativeView(this._component);\n            this._attachNativeEvents();\n            this._attachPropUpdater();\n            this._attachAnimatedStyles();\n        }\n        _getEventViewRef() {\n            var _a;\n            // Make sure to get the scrollable node for components that implement\n            // `ScrollResponder.Mixin`.\n            return ((_a = this._component) === null || _a === void 0 ? void 0 : _a.getScrollableNode) ? this._component.getScrollableNode()\n                : this._component;\n        }\n        _attachNativeEvents() {\n            const node = this._getEventViewRef();\n            let viewTag = findNodeHandle((options === null || options === void 0 ? void 0 : options.setNativeProps) ? this : node);\n            const componentName = Component.displayName || Component.name;\n            if ((componentName === null || componentName === void 0 ? void 0 : componentName.endsWith('FlashList')) && this._component) {\n                // @ts-ignore it's FlashList specific: https://github.com/Shopify/flash-list/blob/218f314e63806b4fe926741ef73f8b9cd6ebc7eb/src/FlashList.tsx#L815\n                viewTag = findNodeHandle(this._component.getScrollableNode());\n            }\n            for (const key in this.props) {\n                const prop = this.props[key];\n                if (prop instanceof AnimatedEvent) {\n                    prop.attachEvent(node, key);\n                }\n                else if (has('current', prop) &&\n                    prop.current instanceof WorkletEventHandler) {\n                    prop.current.registerForEvents(viewTag, key);\n                }\n            }\n        }\n        _detachNativeEvents() {\n            const node = this._getEventViewRef();\n            for (const key in this.props) {\n                const prop = this.props[key];\n                if (prop instanceof AnimatedEvent) {\n                    prop.detachEvent(node, key);\n                }\n                else if (has('current', prop) &&\n                    prop.current instanceof WorkletEventHandler) {\n                    prop.current.unregisterFromEvents();\n                }\n            }\n        }\n        _detachStyles() {\n            var _a;\n            if (Platform.OS === 'web' && this._styles !== null) {\n                for (const style of this._styles) {\n                    if (style === null || style === void 0 ? void 0 : style.viewsRef) {\n                        style.viewsRef.remove(this);\n                    }\n                }\n            }\n            else if (this._viewTag !== -1 && this._styles !== null) {\n                for (const style of this._styles) {\n                    style.viewDescriptors.remove(this._viewTag);\n                }\n                if ((_a = this.props.animatedProps) === null || _a === void 0 ? void 0 : _a.viewDescriptors) {\n                    this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n                }\n            }\n        }\n        _reattachNativeEvents(prevProps) {\n            const node = this._getEventViewRef();\n            const attached = new Set();\n            const nextEvts = new Set();\n            let viewTag;\n            for (const key in this.props) {\n                const prop = this.props[key];\n                if (prop instanceof AnimatedEvent) {\n                    nextEvts.add(prop.__nodeID);\n                }\n                else if (has('current', prop) &&\n                    prop.current instanceof WorkletEventHandler) {\n                    if (viewTag === undefined) {\n                        viewTag = prop.current.viewTag;\n                    }\n                }\n            }\n            for (const key in prevProps) {\n                const prop = this.props[key];\n                if (prop instanceof AnimatedEvent) {\n                    if (!nextEvts.has(prop.__nodeID)) {\n                        // event was in prev props but not in current props, we detach\n                        prop.detachEvent(node, key);\n                    }\n                    else {\n                        // event was in prev and is still in current props\n                        attached.add(prop.__nodeID);\n                    }\n                }\n                else if (has('current', prop) &&\n                    prop.current instanceof WorkletEventHandler &&\n                    prop.current.reattachNeeded) {\n                    prop.current.unregisterFromEvents();\n                }\n            }\n            for (const key in this.props) {\n                const prop = this.props[key];\n                if (prop instanceof AnimatedEvent &&\n                    !attached.has(prop.__nodeID)) {\n                    // not yet attached\n                    prop.attachEvent(node, key);\n                }\n                else if (has('current', prop) &&\n                    prop.current instanceof WorkletEventHandler &&\n                    prop.current.reattachNeeded) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    prop.current.registerForEvents(viewTag, key);\n                    prop.current.reattachNeeded = false;\n                }\n            }\n        }\n        _attachProps(nextProps) {\n            const oldPropsAnimated = this._propsAnimated;\n            this._propsAnimated = createOrReusePropsNode(nextProps, this._animatedPropsCallback, oldPropsAnimated);\n            // If prop node has been reused we don't need to call into \"__detach\"\n            if (oldPropsAnimated !== this._propsAnimated) {\n                // When you call detach, it removes the element from the parent list\n                // of children. If it goes to 0, then the parent also detaches itself\n                // and so on.\n                // An optimization is to attach the new elements and THEN detach the old\n                // ones instead of detaching and THEN attaching.\n                // This way the intermediate state isn't to go to 0 and trigger\n                // this expensive recursive detaching to then re-attach everything on\n                // the very next operation.\n                oldPropsAnimated && oldPropsAnimated.__detach();\n            }\n        }\n        _updateFromNative(props) {\n            var _a, _b;\n            if (options === null || options === void 0 ? void 0 : options.setNativeProps) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                options.setNativeProps(this._component, props);\n            }\n            else {\n                // eslint-disable-next-line no-unused-expressions\n                (_b = (_a = this._component) === null || _a === void 0 ? void 0 : _a.setNativeProps) === null || _b === void 0 ? void 0 : _b.call(_a, props);\n            }\n        }\n        _attachPropUpdater() {\n            const viewTag = findNodeHandle(this);\n            NODE_MAPPING.set(viewTag, this);\n            if (NODE_MAPPING.size === 1) {\n                ReanimatedEventEmitter.addListener('onReanimatedPropsChange', listener);\n            }\n        }\n        _attachAnimatedStyles() {\n            var _a, _b, _c;\n            const styles = this.props.style\n                ? onlyAnimatedStyles(flattenArray(this.props.style))\n                : [];\n            const prevStyles = this._styles;\n            this._styles = styles;\n            const prevAnimatedProps = this._animatedProps;\n            this._animatedProps = this.props.animatedProps;\n            let viewTag;\n            let viewName;\n            if (Platform.OS === 'web') {\n                viewTag = findNodeHandle(this);\n                viewName = null;\n            }\n            else {\n                // hostInstance can be null for a component that doesn't render anything (render function returns null). Example: svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n                const hostInstance = RNRenderer.findHostInstance_DEPRECATED(this);\n                if (!hostInstance) {\n                    throw new Error('Cannot find host instance for this component. Maybe it renders nothing?');\n                }\n                // we can access view tag in the same way it's accessed here https://github.com/facebook/react/blob/e3f4eb7272d4ca0ee49f27577156b57eeb07cf73/packages/react-native-renderer/src/ReactFabric.js#L146\n                viewTag = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance._nativeTag;\n                /**\n                 * RN uses viewConfig for components for storing different properties of the component(example: https://github.com/facebook/react-native/blob/master/Libraries/Components/ScrollView/ScrollViewViewConfig.js#L16).\n                 * The name we're looking for is in the field named uiViewClassName.\n                 */\n                viewName = (_a = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig) === null || _a === void 0 ? void 0 : _a.uiViewClassName;\n                // update UI props whitelist for this view\n                const hasReanimated2Props = ((_b = this.props.animatedProps) === null || _b === void 0 ? void 0 : _b.viewDescriptors) || styles.length;\n                if (hasReanimated2Props && (hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig)) {\n                    adaptViewConfig(hostInstance.viewConfig);\n                }\n            }\n            this._viewTag = viewTag;\n            // remove old styles\n            if (prevStyles) {\n                // in most of the cases, views have only a single animated style and it remains unchanged\n                const hasOneSameStyle = styles.length === 1 &&\n                    prevStyles.length === 1 &&\n                    isSameAnimatedStyle(styles[0], prevStyles[0]);\n                if (!hasOneSameStyle) {\n                    // otherwise, remove each style that is not present in new styles\n                    for (const prevStyle of prevStyles) {\n                        const isPresent = styles.some((style) => isSameAnimatedStyle(style, prevStyle));\n                        if (!isPresent) {\n                            prevStyle.viewDescriptors.remove(viewTag);\n                        }\n                    }\n                }\n            }\n            styles.forEach((style) => {\n                style.viewDescriptors.add({ tag: viewTag, name: viewName });\n                if (isJest()) {\n                    /**\n                     * We need to connect Jest's TestObject instance whose contains just props object\n                     * with the updateProps() function where we update the properties of the component.\n                     * We can't update props object directly because TestObject contains a copy of props - look at render function:\n                     * const props = this._filterNonAnimatedProps(this.props);\n                     */\n                    this.animatedStyle.value = Object.assign(Object.assign({}, this.animatedStyle.value), style.initial.value);\n                    style.animatedStyle.current = this.animatedStyle;\n                }\n            });\n            // detach old animatedProps\n            if (prevAnimatedProps &&\n                !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)) {\n                prevAnimatedProps.viewDescriptors.remove(viewTag);\n            }\n            // attach animatedProps property\n            if ((_c = this.props.animatedProps) === null || _c === void 0 ? void 0 : _c.viewDescriptors) {\n                this.props.animatedProps.viewDescriptors.add({\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    tag: viewTag,\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    name: viewName,\n                });\n            }\n        }\n        _detachPropUpdater() {\n            const viewTag = findNodeHandle(this);\n            NODE_MAPPING.delete(viewTag);\n            if (NODE_MAPPING.size === 0) {\n                ReanimatedEventEmitter.removeAllListeners('onReanimatedPropsChange');\n            }\n        }\n        componentDidUpdate(prevProps) {\n            this._attachProps(this.props);\n            this._reattachNativeEvents(prevProps);\n            this._propsAnimated &&\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                this._propsAnimated.setNativeView(this._component);\n            this._attachAnimatedStyles();\n        }\n        _filterNonAnimatedStyle(inputStyle) {\n            const style = {};\n            for (const key in inputStyle) {\n                const value = inputStyle[key];\n                if (!hasAnimatedNodes(value)) {\n                    style[key] = value;\n                }\n                else if (value instanceof AnimatedValue) {\n                    // if any style in animated component is set directly to the `Value` we set those styles to the first value of `Value` node in order\n                    // to avoid flash of default styles when `Value` is being asynchrounously sent via bridge and initialized in the native side.\n                    style[key] = value._startingValue;\n                }\n            }\n            return style;\n        }\n        _filterNonAnimatedProps(inputProps) {\n            const props = {};\n            for (const key in inputProps) {\n                const value = inputProps[key];\n                if (key === 'style') {\n                    const styleProp = inputProps.style;\n                    const styles = flattenArray(styleProp !== null && styleProp !== void 0 ? styleProp : []);\n                    const processedStyle = styles.map((style) => {\n                        if (style && style.viewDescriptors) {\n                            // this is how we recognize styles returned by useAnimatedStyle\n                            style.viewsRef.add(this);\n                            if (this._isFirstRender) {\n                                this.initialStyle = Object.assign(Object.assign({}, style.initial.value), initialUpdaterRun(style.initial.updater));\n                            }\n                            return this.initialStyle;\n                        }\n                        else {\n                            return style;\n                        }\n                    });\n                    props[key] = this._filterNonAnimatedStyle(StyleSheet.flatten(processedStyle));\n                }\n                else if (key === 'animatedProps') {\n                    const animatedProp = inputProps.animatedProps;\n                    if (animatedProp.initial !== undefined) {\n                        Object.keys(animatedProp.initial.value).forEach((key) => {\n                            var _a, _b;\n                            props[key] = (_a = animatedProp.initial) === null || _a === void 0 ? void 0 : _a.value[key];\n                            (_b = animatedProp.viewsRef) === null || _b === void 0 ? void 0 : _b.add(this);\n                        });\n                    }\n                }\n                else if (value instanceof AnimatedEvent) {\n                    // we cannot filter out event listeners completely as some components\n                    // rely on having a callback registered in order to generate events\n                    // alltogether. Therefore we provide a dummy callback here to allow\n                    // native event dispatcher to hijack events.\n                    props[key] = dummyListener;\n                }\n                else if (has('current', value) &&\n                    value.current instanceof WorkletEventHandler) {\n                    if (value.current.eventNames.length > 0) {\n                        value.current.eventNames.forEach((eventName) => {\n                            props[eventName] = has('listeners', value.current)\n                                ? value.current.listeners[eventName]\n                                : dummyListener;\n                        });\n                    }\n                    else {\n                        props[key] = dummyListener;\n                    }\n                }\n                else if (!(value instanceof AnimatedNode)) {\n                    if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\n                        props[key] = value;\n                    }\n                }\n                else if (value instanceof AnimatedValue) {\n                    // if any prop in animated component is set directly to the `Value` we set those props to the first value of `Value` node in order\n                    // to avoid default values for a short moment when `Value` is being asynchrounously sent via bridge and initialized in the native side.\n                    props[key] = value._startingValue;\n                }\n            }\n            return props;\n        }\n        render() {\n            const props = this._filterNonAnimatedProps(this.props);\n            if (isJest()) {\n                props.animatedStyle = this.animatedStyle;\n            }\n            if (this._isFirstRender) {\n                this._isFirstRender = false;\n            }\n            const platformProps = Platform.select({\n                web: {},\n                default: { collapsable: false },\n            });\n            return (<Component {...props} ref={this._setComponentRef} {...platformProps}/>);\n        }\n    }\n    AnimatedComponent.displayName = `AnimatedComponent(${Component.displayName || Component.name || 'Component'})`;\n    return React.forwardRef((props, ref) => {\n        return (<AnimatedComponent {...props} {...(ref === null ? null : { forwardedRef: ref })}/>);\n    });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}